{"version":3,"sources":["remote/trade-stars/index.ts","remote/trade-stars/company-register-functions.ts","components/register/TradesmenCompanyRegister.tsx","remote/trade-stars/ts-register-functions.ts","components/register/TradesmenRegister.tsx","remote/trade-stars/ts-appointments-functions.ts","components/customer/view-app/ViewAppointments.tsx","components/profile-card/ProfileCard.tsx","components/customer/CustomerInfo.tsx","components/tradesman/profile/TradesmanProfile.tsx","components/tradesman/TradesmanDashboard.tsx","remote/trade-stars/ts-reviews-functions.ts","components/reviews/CustomerReadReviews.tsx","components/tradesman/reviews/TradesmanReviews.tsx","components/tradesman/schedule/ViewSchedule.tsx","remote/trade-stars/approve-appointment.ts","components/approvereject/ApproveAppointments.tsx","remote/trade-stars/ts-services-functions.ts","components/customer/customer-dashboard/CustomerDashboard.tsx","remote/trade-stars/create-review-functions.ts","components/reviews/CreateReview.tsx","remote/trade-stars/ts-companies-functions.ts","components/book-appointment/BookAppointment.tsx","components/side-nav/ClippedDrawer.tsx","remote/trade-stars/trade-stars-functions.ts","components/login/LoginForm.tsx","components/landing-page/LandingPage.tsx","customer-comp/CustomerRegister.tsx","remote/trade-stars/create-service.ts","components/servicesregister/ServiceRegister.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["tradeStarApi","axios","create","baseURL","headers","createNewCompany","companyName","companyOwner","a","newCompany","console","log","post","res","data","response","Error","useStyles","makeStyles","theme","root","minWidth","background","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","formControl","selectEmpty","head","fontWeight","TradesmenCompanyRegister","props","history","useHistory","classes","useState","changeCompanyName","currentUser","handleSubmitTradesmenDesc","e","preventDefault","company","updateCurrentCompany","push","message","Card","className","CardContent","Container","component","maxWidth","CssBaseline","Avatar","Typography","variant","onSubmit","noValidate","autoComplete","Grid","container","item","xs","TextField","value","onChange","target","required","fullWidth","id","label","name","Button","type","color","onClick","justify","Box","mt","createNewTradesmen","firstName","lastName","username","password","email","newTradesmen","userRole","roleId","maxHeight","hd","TradesmenRegister","changeFirstName","changeLastName","changeUsername","changePassword","changeEmail","handleSubmitTradesmen","tradesmen","updateCurrentUser","sm","autoFocus","getAllAppointmentsByCompanyId","companyId","get","getAllAppointmentsByCustomerId","customerId","updateAppointmentCompletedById","appointment","isCompleted","updatedAppt","appointmentCompleted","put","createAppointment","appointmentStart","appointmentEnd","forService","newAppointment","appointmentConfirmed","table","tableRow","fontSize","ViewAppointments","upcomingAppts","changeUpcomingAppts","useEffect","userId","appts","getUpcomingAppts","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","appt","scope","appointmentId","Date","toLocaleString","serviceTypes","serviceType","title","pos","marginBottom","ProfileCard","CustomerInfo","TradesmanProfile","TradesmanDashboard","getReviewsByCompanyId","minHeight","CustomerReadReviews","reviews","changeReviews","currentCompany","revs","getReviews","rev","reviewedBy","reviewText","TradesmanReviews","tb","button1","borderColor","hoverOver","button2","ViewSchedule","scheduledAppts","changeScheduleAppts","getScheduleRows","markAsCompleted","markAsCancelled","ButtonGroup","UpdateAppointments","isConfirmed","text","col","ApproveAppointments","appointments","viewAppointments","appoint","getAppointments","approveAppointments","user","rejectAppointments","row","getAllTradeServices","getAllServicesTypes","createStyles","CustomerDashboard","viewServices","changeViewServices","changeServiceTypes","getServiceRows","serv","servTypes","getServiceTypes","CardActionArea","style","borderRadius","gutterBottom","providedBy","direction","servicePrice","CardActions","padding","service","updateCurrentService","serviceId","size","createNewReview","reviewedFor","newReview","bg","backgroud","CreateReview","review","changeReview","handleSubmitCreateReview","alert","event","multiline","rows","getCompanyByOwnerId","textField","height","BookAppointment","pickedDate","changePickedDate","handleSubmitAppointment","DOpickedEndDate","setHours","getHours","getMinutes","DOpickedDate","currentService","defaultValue","InputLabelProps","shrink","appBar","zIndex","drawer","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","starIcon","marginRight","infoIcon","scheduleIcon","businessIcon","headerText","listText","ClippedDrawer","undefined","changeCompany","changeService","associatedCompany","getCompany","useRouteMatch","path","url","AppBar","position","Toolbar","src","alt","noWrap","Drawer","List","index","ListItem","button","NavigateLink","ListItemIcon","ListItemText","primary","TradesmanNavigateLink","Divider","tsLogin","credentials","createNewCustomer","newCustomer","bullet","transform","mainLogo","logoDiv","LoginForm","handleSubmitLogin","LandingPage","Register","handleSubmitCustomer","customer","createNewService","newService","ServiceRegister","changeServicePrice","changeServiceType","handleService","FormControl","InputLabel","htmlFor","Select","native","inputProps","App","changeUser","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6XAGcA,E,OAAeC,EAAMC,OAAO,CAEtCC,QAAQ,0DACRC,QAAQ,CACJ,eAAgB,sBCJXC,EAAgB,uCAAG,WAAOC,EAAoBC,GAA3B,iBAAAC,EAAA,6DAExBC,EAAa,CACTH,cACAC,gBAGRG,QAAQC,IAAIF,GAPgB,kBAURT,EAAaY,KAAK,aAAcH,GAVxB,cAUpBI,EAVoB,OAWxBH,QAAQC,IAAIE,EAAIC,MAXQ,kBAYjBD,EAAIC,MAZa,qCAcxBJ,QAAQC,IAAR,OACG,KAAEI,SAfmB,uBAgBd,IAAIC,MAAM,KAAED,SAASD,MAhBP,cAkBd,IAAIE,MAAM,6BAlBI,0DAAH,wDCqCvBC,EAAYC,aAAW,SAACC,GAAD,MAAmB,CAC5CC,KAAM,CACFC,SAAU,IACVC,WAAY,WAEhBC,MAAO,CACLC,UAAWL,EAAMM,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQX,EAAMM,QAAQ,GACtBM,gBAAiBZ,EAAMa,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWL,EAAMM,QAAQ,IAE3BY,OAAQ,CACNP,OAAQX,EAAMM,QAAQ,EAAG,EAAG,IAE9Ba,YAAa,CACTR,OAAQX,EAAMM,QAAQ,GACtBJ,SAAU,IACVe,MAAO,OACPV,QAAS,OAETE,WAAY,QAGdW,YAAa,CACXf,UAAWL,EAAMM,QAAQ,IAE7Be,KAAM,CACFC,WAAY,YAKLC,EAAmF,SAACC,GAE/F,IAAIC,EAAUC,cACRC,EAAU7B,IAHyF,EAKhE8B,mBAAS,IALuD,mBAKlGzC,EALkG,KAKrF0C,EALqF,OAMhED,mBAAS,IANuD,gCAO9DA,mBAASJ,EAAMM,cAP+C,mBAOlG1C,EAPkG,UAwBzG,IAAM2C,EAAyB,uCAAG,WAAOC,GAAP,eAAA3C,EAAA,6DAG9B2C,EAAEC,iBAH4B,kBASN/C,EAChBC,EACAC,GAXsB,QAStB8C,EATsB,UAetBV,EAAMW,qBAAqBD,GAC3BT,EAAQW,KAAK,qBAGjB7C,QAAQC,IAAI,WAnBc,gDAqB1BD,QAAQC,IAAI,KAAE6C,SArBY,yDAAH,sDA4B/B,OACA,cAACC,EAAA,EAAD,CAAMC,UAAWZ,EAAQ1B,KAAzB,SACI,cAACuC,EAAA,EAAD,UACA,eAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACI,cAACC,EAAA,EAAD,IACA,sBAAKL,UAAWZ,EAAQvB,MAAxB,UACI,cAACyC,EAAA,EAAD,CAAQN,UAAWZ,EAAQjB,SAElB,uBACT,cAACoC,EAAA,EAAD,CAAYP,UAAWZ,EAAQN,KAAMqB,UAAU,KAAKK,QAAQ,KAA5D,8CAEa,uBACb,uBAAMC,SAAUjB,EAA2BkB,YAAU,EAACC,aAAa,MAAnE,UACI,cAACC,EAAA,EAAD,CAAMC,WAAS,EAAC9C,QAAS,EAAzB,SACI,cAAC6C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,CACIC,MAAOrE,EACPsE,SA3DI,SAACzB,GAC7BH,EAAkBG,EAAE0B,OAAOF,QA2DHT,QAAQ,WACRY,UAAQ,EACRC,WAAS,EACTC,GAAG,cACHC,MAAM,eACNC,KAAK,cACLb,aAAa,oBAgBlB,uBACP,cAACc,EAAA,EAAD,CACIC,KAAK,SACLL,WAAS,EACTb,QAAQ,YACRmB,MAAM,UACNC,QAhFpB,WACI5E,QAAQC,IAAI,uBA0EA,sBASA,cAAC2D,EAAA,EAAD,CAAMC,WAAS,EAACgB,QAAQ,WAAxB,SACI,cAACjB,EAAA,EAAD,CAAME,MAAI,YAKtB,cAACgB,EAAA,EAAD,CAAKC,GAAI,YC1LRC,EAAkB,uCAAG,WAAOC,EAAkBC,EAAiBC,EAAiBC,EAAiBC,GAA5E,iBAAAvF,EAAA,6DAE1BwF,EAAe,CACXL,YACAC,WACAC,WACAC,WACAC,QACAE,SAAU,CACNC,OAAQ,IAIpBxF,QAAQC,IAAIqF,GAbkB,kBAgBVhG,EAAaY,KAAK,SAAUoF,GAhBlB,cAgBtBnF,EAhBsB,OAiB1BH,QAAQC,IAAIE,EAAIC,MAjBU,kBAkBnBD,EAAIC,MAlBe,qCAoB1BJ,QAAQC,IAAR,OACG,KAAEI,SArBqB,uBAsBhB,IAAIC,MAAM,KAAED,SAASD,MAtBL,cAwBhB,IAAIE,MAAM,6BAxBM,0DAAH,8DCyBzBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,IACV8E,UAAW,IACX7E,WAAY,WAEdC,MAAO,CACLC,UAAWL,EAAMM,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQX,EAAMM,QAAQ,GACtBM,gBAAiBZ,EAAMa,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWL,EAAMM,QAAQ,IAE3BY,OAAQ,CACNP,OAAQX,EAAMM,QAAQ,EAAG,EAAG,IAE9B2E,GAAG,CACD3D,WAAY,YAIF4D,EAAsE,SAAC1D,GACnF,IAAMG,EAAU7B,IACZ2B,EAAUC,cAF+E,EAIxDE,mBAAS,IAJ+C,mBAItF4C,EAJsF,KAI3EW,EAJ2E,OAK1DvD,mBAAS,IALiD,mBAKtF6C,EALsF,KAK5EW,EAL4E,OAM1DxD,mBAAS,IANiD,mBAMtF8C,EANsF,KAM5EW,EAN4E,OAO1DzD,mBAAS,IAPiD,mBAOtF+C,EAPsF,KAO5EW,EAP4E,OAQhE1D,mBAAS,IARuD,mBAQtFgD,EARsF,KAQ/EW,EAR+E,KAqC3F,IAAMC,EAAqB,uCAAI,WAAOxD,GAAP,eAAA3C,EAAA,6DAG5B2C,EAAEC,iBAH0B,kBAMLsC,EACtBC,EACAC,EACAC,EACAC,EACAC,GAX2B,OAMxBa,EANwB,OAa3BjE,EAAMkE,kBAAkBD,GACxBlG,QAAQC,IAAIiG,GACTA,GACDhE,EAAQW,KAAK,6BAhBY,kDAmB3B7C,QAAQC,IAAI,KAAE6C,SAnBa,0DAAJ,sDAwB7B,OACE,cAACC,EAAA,EAAD,CAAMC,UAAWZ,EAAQ1B,KAAzB,SACE,cAACuC,EAAA,EAAD,UACF,eAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,sBAAKL,UAAWZ,EAAQvB,MAAxB,UACE,cAACyC,EAAA,EAAD,CAAQN,UAAWZ,EAAQjB,SAG3B,cAACoC,EAAA,EAAD,CAAYP,UAAWZ,EAAQsD,GAAIvC,UAAU,KAAKK,QAAQ,KAA1D,oCAEa,uBACb,uBAAMC,SAAUwC,EAAuBvC,YAAU,EAACC,aAAa,MAA/D,UACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAC9C,QAAS,EAAzB,UACE,cAAC6C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIqC,GAAI,EAAvB,SACE,cAACpC,EAAA,EAAD,CACEL,aAAa,QACbM,MAASgB,EACTf,SApEgB,SAACzB,GAC7BmD,EAAgBnD,EAAE0B,OAAOF,QAoEbO,KAAK,YACLhB,QAAQ,WACRY,UAAQ,EACRC,WAAS,EACTC,GAAG,YACHC,MAAM,aACN8B,WAAS,MAGb,cAACzC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIqC,GAAI,EAAvB,SACE,cAACpC,EAAA,EAAD,CACEC,MAASiB,EACThB,SA7Ee,SAACzB,GAC5BoD,EAAepD,EAAE0B,OAAOF,QA6EZT,QAAQ,WACRY,UAAQ,EACRC,WAAS,EACTC,GAAG,WACHC,MAAM,YACNC,KAAK,WACLb,aAAa,YAGjB,cAACC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,MAASkB,EACTjB,SAvFe,SAACzB,GAC5BqD,EAAerD,EAAE0B,OAAOF,QAuFZT,QAAQ,WACRY,UAAQ,EACRC,WAAS,EACTC,GAAG,WACHC,MAAM,YACNC,KAAK,WACLb,aAAa,eAGjB,cAACC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,MAASmB,EACTlB,SAjGe,SAACzB,GAC5BsD,EAAetD,EAAE0B,OAAOF,QAiGZT,QAAQ,WACRY,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNG,KAAK,WACLJ,GAAG,WACHX,aAAa,uBAIjB,cAACC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,MAASoB,EACTnB,SA7GY,SAACzB,GACzBuD,EAAYvD,EAAE0B,OAAOF,QA6GTT,QAAQ,WACRY,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,QACNC,KAAK,QACLb,aAAa,eAKnB,uBACA,cAACc,EAAA,EAAD,CACEC,KAAK,SACLL,WAAS,EACTb,QAAQ,YACRmB,MAAM,UACNC,QAzHV,WAEE5E,QAAQC,IAAI,SAkHN,sBASA,cAAC2D,EAAA,EAAD,CAAMC,WAAS,EAACgB,QAAQ,WAAxB,SACE,cAACjB,EAAA,EAAD,CAAME,MAAI,YAQhB,cAACgB,EAAA,EAAD,CAAKC,GAAI,Y,0LCtMFuB,GAA6B,uCAAG,WAAOC,GAAP,eAAAzG,EAAA,+EAErBR,EAAakH,IAAb,wBAAkCD,IAFb,cAEjCpG,EAFiC,OAGrCH,QAAQC,IAAIE,EAAIC,MAHqB,kBAI9BD,EAAIC,MAJ0B,mCAMrCJ,QAAQC,IAAR,OACG,KAAEI,SAPgC,uBAQ3B,IAAIC,MAAM,KAAED,SAASD,MARM,cAU3B,IAAIE,MAAM,oCAViB,yDAAH,sDAe7BmG,GAA8B,uCAAG,WAAOC,GAAP,eAAA5G,EAAA,+EAEtBR,EAAakH,IAAb,iCAA2CE,IAFrB,cAElCvG,EAFkC,OAGtCH,QAAQC,IAAIE,EAAIC,MAHsB,kBAI/BD,EAAIC,MAJ2B,mCAMtCJ,QAAQC,IAAR,OACG,KAAEI,SAPiC,uBAQ5B,IAAIC,MAAM,KAAED,SAASD,MARO,cAU5B,IAAIE,MAAM,oCAVkB,yDAAH,sDAe9BqG,GAA8B,uCAAG,WAAOC,EAA0BC,GAAjC,iBAAA/G,EAAA,6DAEtCgH,EAFsC,2BAGnCF,GAHmC,IAItCG,qBAAsBF,IAJgB,kBAQtBvH,EAAa0H,IAAb,gBAAkCF,GARZ,cAQlC3G,EARkC,OAStCH,QAAQC,IAAIE,EAAIC,MATsB,kBAU/BD,EAAIC,MAV2B,mCAYtCJ,QAAQC,IAAR,OACG,KAAEI,SAbiC,uBAc5B,IAAIC,MAAM,KAAED,SAASD,MAdO,cAgB5B,IAAIE,MAAM,oCAhBkB,yDAAH,wDAqB9B2G,GAAiB,uCAAG,WAAOP,EAAkBH,EAAoBW,EAAwBC,EAAsBC,GAA3F,iBAAAtH,EAAA,6DAEzBuH,EAAiB,CACjBX,aACAH,YACAW,mBACAC,iBACAC,aACAE,sBAAsB,EACtBP,sBAAsB,GAG1B/G,QAAQC,IAAIoH,GAZiB,kBAeT/H,EAAaY,KAAK,gBAAiBmH,GAf1B,cAerBlH,EAfqB,OAgBzBH,QAAQC,IAAIE,EAAIC,MAhBS,kBAiBlBD,EAAIC,MAjBc,qCAmBzBJ,QAAQC,IAAR,OACG,KAAEI,SApBoB,uBAqBf,IAAIC,MAAM,KAAED,SAASD,MArBN,cAuBf,IAAIE,MAAM,6BAvBK,0DAAH,8DClDxBC,GAAYC,YAAW,CAC3B+G,MAAO,CACL5G,SAAU,IACVC,WAAY,WAEdkB,KAAM,CAEJ6C,MAAO,WAET6C,SAAU,CACRzF,WAAY,OACZ0F,SAAU,MAIDC,GAA+D,SAC1EzF,GAEA,IAAMG,EAAU7B,KADb,EAG0C8B,qBAH1C,mBAGIsF,EAHJ,KAGmBC,EAHnB,KAgBH,OAXAC,qBAAU,YACc,uCAAG,4BAAA/H,EAAA,sEACL2G,GAChBxE,EAAMM,YAAYuF,QAFG,OACnBC,EADmB,OAIvB/H,QAAQC,IAAI8H,GACZH,EAAoBG,GALG,2CAAH,qDAOtBC,KACC,CAAC/F,EAAMM,YAAYuF,SAGpB,qCACE,qBAAI9E,UAAWZ,EAAQN,KAAvB,uCAAwDG,EAAMM,YAAY0C,UAA1E,IAAsFhD,EAAMM,YAAY2C,YACxG,8BACE,cAAC+C,EAAA,EAAD,CAAgB9E,UAAW+E,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOnF,UAAWZ,EAAQmF,MAAOa,aAAW,eAA5C,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYvF,UAAWZ,EAAQoF,SAAUgB,MAAM,SAA/C,4BAEA,cAACD,EAAA,EAAD,CAAWvF,UAAWZ,EAAQoF,SAAUgB,MAAM,SAA9C,kBACA,cAACD,EAAA,EAAD,CAAYvF,UAAWZ,EAAQoF,SAAUgB,MAAM,SAA/C,gBACA,cAACD,EAAA,EAAD,CAAYvF,UAAWZ,EAAQoF,SAAUgB,MAAM,SAA/C,0BAGJ,cAACC,EAAA,EAAD,UACGd,EACCA,EAAce,KAAI,SAACC,GAAD,OAChB,eAACL,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWpF,UAAU,KAAKyF,MAAM,MAAMJ,MAAM,SAA5C,SACGG,EAAKE,gBAKR,cAACN,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2B,IAAIM,KAAKH,EAAKzB,kBAAkB6B,mBAC3D,cAACR,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2B,IAAIM,KAAKH,EAAKxB,gBAAgB4B,mBACzD,cAACR,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACGG,EAAKvB,WAAW4B,aAAaC,gBAVnBN,EAAKE,kBAetB,cAACP,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAWpF,UAAU,KAAKyF,MAAM,MAAhC,yBADa,gB,oBChFzBrI,GAAYC,YAAW,CAC3BE,KAAM,CACJC,SAAU,IACVC,WAAY,WAEdsI,MAAO,CACLzB,SAAU,IAEZ0B,IAAK,CACHC,aAAc,GACdrH,WAAY,UAQHsH,GAA0D,SAACpH,GACtE,IAAMG,EAAU7B,KAChB,OACE,cAACwC,EAAA,EAAD,CAAMC,UAAWZ,EAAQ1B,KAAzB,SACE,eAACuC,EAAA,EAAD,WACE,cAACM,EAAA,EAAD,CAAYP,UAAWZ,EAAQ+G,IAAK3F,QAAQ,KAAKL,UAAU,KAA3D,8BAGA,cAAC,KAAD,IACA,eAACI,EAAA,EAAD,CAAaiF,MAAM,OAAOxF,UAAWZ,EAAQ+G,IAAKxE,MAAM,cAAxD,sBACY1C,EAAMM,aAAeN,EAAMM,YAAYuF,UAEnD,eAACvE,EAAA,EAAD,CAAYiF,MAAM,OAAOxF,UAAWZ,EAAQ+G,IAAKxE,MAAM,cAAvD,uBACa1C,EAAMM,aAAeN,EAAMM,YAAY4C,YAEpD,eAAC5B,EAAA,EAAD,CAAYiF,MAAM,OAAOxF,UAAWZ,EAAQ+G,IAAKxE,MAAM,cAAvD,yBACe1C,EAAMM,aAAeN,EAAMM,YAAY0C,aAEtD,eAAC1B,EAAA,EAAD,CAAYiF,MAAM,OAAOxF,UAAWZ,EAAQ+G,IAAKxE,MAAM,cAAvD,wBACc1C,EAAMM,aAAeN,EAAMM,YAAY2C,YAErD,eAAC3B,EAAA,EAAD,CAAYiF,MAAM,OAAOxF,UAAWZ,EAAQ+G,IAAKxE,MAAM,cAAvD,qBACW1C,EAAMM,aAAeN,EAAMM,YAAY8C,eCvC7CiE,GAAuD,SAACrH,GAEjE,OACE,mCACA,8BACA,cAAC,GAAD,CAAaM,YAAaN,EAAMM,mBCNzBgH,GAA+D,SAACtH,GAEzE,OACE,mCACA,8BACM,cAAC,GAAD,CAAaM,YAAaN,EAAMM,mBCY/BiH,GAAmE,SAACvH,GAE7E,OACE,mCACA,8BACM,8C,oBCbCwH,GAAqB,uCAAG,WAAOlD,GAAP,eAAAzG,EAAA,+EAEbR,EAAakH,IAAb,mBAA6BD,IAFhB,cAEzBpG,EAFyB,OAG7BH,QAAQC,IAAIE,EAAIC,MAHa,kBAItBD,EAAIC,MAJkB,mCAM7BJ,QAAQC,IAAR,OACG,KAAEI,SAPwB,uBAQnB,IAAIC,MAAM,KAAED,SAASD,MARF,cAUnB,IAAIE,MAAM,oCAVS,yDAAH,sD,qBCF5BC,GAAYC,MAAW,SAACC,GAAD,MAAmB,CAC5CC,KAAM,CACFC,SAAU,IACV+I,UAAW,GACX9I,WAAY,WAEhBkB,KAAM,CACF6C,MAAO,WAEXwE,IAAK,CACD1B,SAAU,QAeLkC,GAA0E,SAAC1H,GAAW,IAAD,EAG7DI,qBAH6D,mBAGvFuH,EAHuF,KAG9EC,EAH8E,KAKxFzH,EAAU7B,KAWhB,OATAsH,qBAAU,YACU,uCAAG,4BAAA/H,EAAA,sEACE2J,GAAsBxH,EAAM6H,eAAevD,WAD7C,OACXwD,EADW,OAEf/J,QAAQC,IAAI8J,GACZF,EAAcE,GAHC,2CAAH,qDAKhBC,KACD,IAGC,qCAEC,qBAAIhH,UAAWZ,EAAQN,KAAvB,6CAA6D,uBACxDG,EAAM6H,eAAelK,eACrBgK,EAAUA,EAAQlB,KAAI,SAACuB,GAAD,OACnB,gCACJ,cAAClH,EAAA,EAAD,CAAMC,UAAWZ,EAAQ1B,KAAzB,SACD,eAACuC,EAAA,EAAD,WACA,eAACM,EAAA,EAAD,CAAYiF,MAAM,OAAOxF,UAAWZ,EAAQ+G,IAAKxE,MAAM,cAAvD,UACA,cAAC,KAAD,IADA,cACuCsF,EAAIC,WAAWjF,UADtD,IACkEgF,EAAIC,WAAWhF,SADjF,kBAES,uBACb,eAAC3B,EAAA,EAAD,CAAYiF,MAAM,OAAOxF,UAAWZ,EAAQ+G,IAAKxE,MAAM,gBAAvD,eACGsF,EAAIE,WADP,aAKA,6BAGD,OChEMC,GAA+D,SAACnI,GAEzE,OACE,mCACE,cAAC,GAAD,CACCW,qBAAwBX,EAAMW,qBAC9BL,YAAeN,EAAMM,YACrB4D,kBAAsBlE,EAAMkE,kBAC5B2D,eAAkB7H,EAAM6H,oB,UCI3BvJ,GAAYC,YAAW,CAC3B+G,MAAO,CACL5G,SAAU,IACVC,WAAY,WAEdkB,KAAM,CACJ6C,MAAO,WAET0F,GAAI,CACFtI,WAAW,QAEbuI,QAAS,CACP3F,MAAO,UACP4F,YAAa,UACbC,UAAW,WAEbC,QAAS,CACP9F,MAAO,UAEP4F,YAAa,aAIJG,GAAuD,SAACzI,GACnE,IAAMG,EAAU7B,KAD6D,EAG/B8B,qBAH+B,mBAGtEsI,EAHsE,KAGtDC,EAHsD,KAK7E/C,qBAAU,YACa,uCAAG,4BAAA/H,EAAA,sEACJwG,GAA8BrE,EAAM6H,eAAevD,WAD/C,OAClBwB,EADkB,OAEtB/H,QAAQC,IAAI8H,GACZ6C,EAAoB7C,GAHE,2CAAH,qDAKrB8C,KACC,CAAC5I,EAAM6H,eAAevD,YAEzB,IAAMuE,EAAe,uCAAG,WAAOlE,GAAP,SAAA9G,EAAA,6DACtBE,QAAQC,IAAI,uCADU,SAEE0G,GAA+BC,GAAa,GAF9C,yDAAH,sDAKfmE,EAAe,uCAAG,WAAOnE,GAAP,SAAA9G,EAAA,6DACtBE,QAAQC,IAAI,uCADU,SAEE0G,GAA+BC,GAAa,GAF9C,yDAAH,sDAKrB,OACE,qCACE,oBAAI5D,UAAWZ,EAAQN,KAAvB,2BACA,8BACE,cAACmG,EAAA,EAAD,CAAgB9E,UAAW+E,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOnF,UAAWZ,EAAQmF,MAAOa,aAAW,eAA5C,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWvF,UAAWZ,EAAQiI,GAAI7B,MAAM,SAAxC,4BACA,cAACD,EAAA,EAAD,CAAWvF,UAAWZ,EAAQiI,GAAI7B,MAAM,SAAxC,2BACA,cAACD,EAAA,EAAD,CAAWvF,UAAWZ,EAAQiI,GAAI7B,MAAM,SAAxC,kBACA,cAACD,EAAA,EAAD,CAAYvF,UAAWZ,EAAQiI,GAAI7B,MAAM,SAAzC,gBACA,cAACD,EAAA,EAAD,CAAWvF,UAAWZ,EAAQiI,GAAI7B,MAAM,SAAxC,0BACA,cAACD,EAAA,EAAD,CAAWvF,UAAWZ,EAAQiI,GAAI7B,MAAM,SAAxC,uBACA,cAACD,EAAA,EAAD,CAAYvF,UAAWZ,EAAQiI,GAAI7B,MAAM,SAAzC,2CAGJ,cAACC,EAAA,EAAD,UACIkC,EAAmBA,EAAejC,KAAI,SAACC,GAAD,OACtC,eAACL,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,MAAM,SAASrF,UAAU,KAAKyF,MAAM,MAA/C,SACGD,EAAKE,gBAER,cAACN,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BG,EAAKjC,WAAWvB,WAC3C,cAACoD,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2B,IAAIM,KAAKH,EAAKzB,kBAAkB6B,mBAC3D,cAACR,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2B,IAAIM,KAAKH,EAAKxB,gBAAgB4B,mBACzD,cAACR,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BG,EAAKvB,WAAW4B,aAAaC,cACxD,cAACV,EAAA,EAAD,CAAWC,MAAM,SAAjB,UAC+B,IAA9BG,EAAK5B,qBACF,YACA,kBAXN,qBAa8B,cAACwB,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAC1B,eAACwC,GAAA,EAAD,CACErG,MAAM,UACNyD,aAAW,gCAFb,UAIE,cAAC3D,EAAA,EAAD,CAAQzB,UAAWZ,EAAQkI,QACzB1F,QAAS,WACPmG,EAAgBpC,IAFpB,oBAOA,cAAClE,EAAA,EAAD,CAAQzB,UAAWZ,EAAQqI,QACzB7F,QAAS,WACPkG,EAAgBnC,IAFpB,6BAzBSA,EAAKE,kBAoCpB,cAACP,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAWpF,UAAU,KAAKyF,MAAM,MAAhC,yBADa,gB,8DC1HlBqC,GAAkB,uCAAG,WAAOrE,EAA0BsE,GAAjC,iBAAApL,EAAA,6DAE1BgH,EAF0B,2BAGvBF,GAHuB,IAI1BU,qBAAsB4D,IAJI,kBAOV5L,EAAa0H,IAAb,gBAAkCF,GAPxB,cAOtB3G,EAPsB,OAQ1BH,QAAQC,IAAIE,EAAIC,MARU,kBASnBD,EAAIC,MATe,mCAW1BJ,QAAQC,IAAR,OACG,KAAEI,SAZqB,uBAahB,IAAIC,MAAM,KAAED,SAASD,MAbL,cAehB,IAAIE,MAAM,6BAfM,yDAAH,wDCwBzBC,GAAYC,YAAW,CAC3BE,KAAM,CACFC,SAAU,IACVC,WAAY,WAEduK,KAAM,CACJpJ,WAAY,QAEdqJ,IAAK,CACHzG,MAAO,WAET2F,QAAS,CACP3F,MAAO,UACP4F,YAAa,UACbC,UAAW,WAEbC,QAAS,CACP9F,MAAO,UAEP4F,YAAa,aAKNc,GAAqE,SAACpJ,GACjF,IAAMG,EAAU7B,KAD2E,EAGlD8B,qBAHkD,mBAGpFiJ,EAHoF,KAGtEC,EAHsE,KAK3F1D,qBAAU,YACa,uCAAG,4BAAA/H,EAAA,sEACFwG,GAA8BrE,EAAM6H,eAAevD,WADjD,OAClBiF,EADkB,OAEtBxL,QAAQC,IAAIuL,GACZD,EAAiBC,GAHK,2CAAH,qDAKrBC,KACC,IAEH,IAAMC,EAAmB,uCAAG,WAAO9E,GAAP,eAAA9G,EAAA,+EAEPmL,GAAmBrE,GAAa,GAFzB,OAEpB+E,EAFoB,OAGxB3L,QAAQC,IAAI0L,GAHY,+BAAA7L,EAAA,MAIA,4BAAAA,EAAA,sEACFwG,GAA8BrE,EAAM6H,eAAevD,WADjD,OAClBiF,EADkB,OAEtBxL,QAAQC,IAAIuL,GACZD,EAAiBC,GAHK,2CAJA,oDASxBC,GATwB,gDAYxBzL,QAAQC,IAAI,KAAE6C,SAZU,yDAAH,sDAgBnB8I,EAAkB,uCAAG,WAAOhF,GAAP,eAAA9G,EAAA,+EAENmL,GAAmBrE,GAAa,GAF1B,OAEnB+E,EAFmB,OAGvB3L,QAAQC,IAAI0L,GAHW,+BAAA7L,EAAA,MAIC,4BAAAA,EAAA,sEACFwG,GAA8BrE,EAAM6H,eAAevD,WADjD,OAClBiF,EADkB,OAEtBxL,QAAQC,IAAIuL,GACZD,EAAiBC,GAHK,2CAJD,oDASvBC,GATuB,gDAWvBzL,QAAQC,IAAI,KAAE6C,SAXS,yDAAH,sDAetB,OAEE,gCACE,oBAAIE,UAAWZ,EAAQgJ,IAAvB,+BACA,cAACnD,EAAA,EAAD,CAAgB9E,UAAW+E,IAAOlF,UAAWZ,EAAQ1B,KAArD,SACF,eAACyH,EAAA,EAAD,CAAOC,aAAW,eAAlB,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAWvF,UAAWZ,EAAQ+I,KAAM3C,MAAM,SAA1C,gBAEE,cAACD,EAAA,EAAD,CAAWvF,UAAWZ,EAAQ+I,KAAM3C,MAAM,SAA1C,2BACA,cAACD,EAAA,EAAD,CAAWvF,UAAWZ,EAAQ+I,KAAM3C,MAAM,SAA1C,0BACA,cAACD,EAAA,EAAD,CAAYvF,UAAWZ,EAAQ+I,KAAM3C,MAAM,SAA3C,wBACA,cAACD,EAAA,EAAD,CAAYvF,UAAWZ,EAAQ+I,KAAM3C,MAAM,SAA3C,sBACA,cAACD,EAAA,EAAD,CAAYvF,UAAWZ,EAAQ+I,KAAM3C,MAAM,SAA3C,qBAEA,cAACD,EAAA,EAAD,CAAYvF,UAAWZ,EAAQ+I,KAAM3C,MAAM,SAA3C,0BAEA,cAACD,EAAA,EAAD,CAAYvF,UAAWZ,EAAQ+I,KAAM3C,MAAM,SAA3C,iCAIJ,cAACC,EAAA,EAAD,UACC6C,EACGA,EAAa5C,KAAI,SAACmD,GAAD,OACf,eAACvD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWpF,UAAU,KAAKyF,MAAM,MAAMJ,MAAM,SAA5C,SACGqD,EAAIhD,gBAEP,cAACN,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BqD,EAAInF,WAAWvB,WAC1C,cAACoD,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BqD,EAAItF,UAAU3G,cACzC,cAAC2I,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACG,IAAIM,KAAK+C,EAAI3E,kBAAkB6B,mBAElC,cAACR,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2B,IAAIM,KAAK+C,EAAI1E,gBAAgB4B,mBACxD,cAACR,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BqD,EAAIzE,WAAW4B,aAAaC,cAGvD,cAACV,EAAA,EAAD,CAAWC,MAAM,SAAjB,UACgC,IAA7BqD,EAAIvE,qBACD,WACA,aAIN,cAACiB,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACE,eAACwC,GAAA,EAAD,CACErG,MAAM,UACNyD,aAAW,gCAFb,UAIE,cAAC3D,EAAA,EAAD,CAAQzB,UAAWZ,EAAQkI,QAAS1F,QAAS,WAAOgH,EAAmBC,IAAvE,oBACA,cAACpH,EAAA,EAAD,CAAQzB,UAAWZ,EAAQqI,QAAS7F,QAAS,WAAO8G,EAAoBG,IAAxE,4BA1BSA,EAAIhD,kBAgCrB,cAACP,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAWpF,UAAU,KAAKyF,MAAM,MAAhC,yBADa,c,8DCxJdkD,GAAmB,uCAAG,4BAAAhM,EAAA,+EAEXR,EAAakH,IAAI,cAFN,cAEvBrG,EAFuB,OAG3BH,QAAQC,IAAIE,EAAIC,MAHW,kBAIpBD,EAAIC,MAJgB,mCAM3BJ,QAAQC,IAAR,OACG,KAAEI,SAPsB,uBAQjB,IAAIC,MAAM,KAAED,SAASD,MARJ,cAUjB,IAAIE,MAAM,6BAVO,yDAAH,qDAenByL,GAAmB,uCAAG,4BAAAjM,EAAA,+EAEXR,EAAakH,IAAI,oBAFN,cAEvBrG,EAFuB,OAG3BH,QAAQC,IAAIE,EAAIC,MAHW,kBAIpBD,EAAIC,MAJgB,mCAM3BJ,QAAQC,IAAR,OACG,KAAEI,SAPsB,uBAQjB,IAAIC,MAAM,KAAED,SAASD,MARJ,cAUjB,IAAIE,MAAM,6BAVO,yDAAH,qD,0CCF1BC,GAAYC,aAAW,SAACC,GAAD,OAC3BuL,YAAa,CACXpK,YAAa,CACXR,OAAQX,EAAMM,QAAQ,GACtBJ,SAAU,KAEZkB,YAAa,CACXf,UAAWL,EAAMM,QAAQ,IAE3BL,KAAM,CACJ0C,SAAU,IACVxC,WAAY,WAEduK,KAAM,CACJxG,MAAO,gBAcAsH,GAAiE,SAAChK,GAC7E,IAAMG,EAAU7B,KADuE,EAE5C8B,qBAF4C,mBAEhF6J,EAFgF,KAElEC,EAFkE,OAG5C9J,mBAAyB,IAHmB,mBAGlE+J,GAHkE,WAKvFvE,qBAAU,WACR,IAAMwE,EAAc,uCAAG,4BAAAvM,EAAA,sEACJgM,KADI,OACjBQ,EADiB,OAErBH,EAAmBG,GAFE,2CAAH,sDAIC,uCAAG,4BAAAxM,EAAA,sEACAiM,KADA,OAClBQ,EADkB,OAEtBH,EAAmBG,GAFG,2CAAH,qDAKrBC,GACAH,MACC,IAEH,IAAInK,EAAUC,cAcZ,OACE,qCACA,oBAAIa,UAAWZ,EAAQ+I,KAAvB,sBAEE,8BACEe,EAAiBA,EAAaxD,KAAI,SAAC4D,GAAD,OAClC,gCACJ,eAAC,KAAD,CAAMtJ,UAAWZ,EAAQ1B,KAAzB,UAGA,cAAC+L,GAAA,EAAD,UAEE,eAACxJ,EAAA,EAAD,WACE,qBAAKyJ,MAAO,CAACrL,gBAAiB,UAAUsL,aAAa,IAArD,SACA,eAACpJ,EAAA,EAAD,CAAYP,UAAWZ,EAAQ+I,KAAMyB,cAAY,EAACpJ,QAAQ,KAAKL,UAAU,KAAMqF,MAAM,OAArF,kBACO,cAAC,KAAD,CAAkB7D,MAAM,cAD/B,QACqD2H,EAAKO,WAAWjN,iBAGrE,eAACgE,EAAA,EAAD,CACIC,WAAS,EACTiJ,UAAU,MACVjI,QAAQ,aAER9D,QAAS,EALb,UAOM,eAACwC,EAAA,EAAD,CAAaC,QAAQ,KAAKL,UAAU,IAAIqF,MAAM,OAA9C,qCACyB8D,EAAKO,WAAWhN,aAAaoF,aAEtD,cAAC1B,EAAA,EAAD,CAAYC,QAAQ,KAAML,UAAU,IAAIqF,MAAM,OAA9C,iHAOA,eAAC5E,EAAA,EAAD,CACFC,WAAS,EACTiJ,UAAU,MACVjI,QAAQ,aAER9D,QAAS,EALP,UAOF,eAACwC,EAAA,EAAD,CAAYC,QAAQ,QAASL,UAAU,IAAIqF,MAAM,OAAjD,+CACsC8D,EAAKtD,aAAaC,YAAY,0BARlE,iIAcA,eAAC1F,EAAA,EAAD,CAAYC,QAAQ,QAAQL,UAAU,IAAIqF,MAAM,OAAhD,sBACU8D,EAAKO,WAAWhN,aAAawF,YAIvC,eAAC9B,EAAA,EAAD,CAAYC,QAAQ,QAASL,UAAU,IAAIqF,MAAM,OAAjD,8CACmC8D,EAAKS,qBAM5C,eAACC,GAAA,EAAD,WAEE,eAACvI,EAAA,EAAD,CAAQiI,MAAO,CACfC,aAAc,GACdtL,gBAAiB,UACjB4L,QAAS,YACTxF,SAAU,QACXzE,UAAWZ,EAAQ+I,KACtB3H,QAAQ,YAAYoB,QAAS,WA1ErC,IAAyBsI,IA0EmCZ,EAzE1DrK,EAAMW,qBAAqBsK,EAAQL,YACnC5K,EAAMkL,qBAAqBD,GAC3BhL,EAAQW,KAAR,+BAiEU,UAOG,cAAC,IAAD,IAPH,8BAUA,eAAC4B,EAAA,EAAD,CAAQiI,MAAO,CACfC,aAAc,GACdtL,gBAAiB,UACjB4L,QAAS,YACTxF,SAAU,QACXzE,UAAWZ,EAAQ+I,KACtB3H,QAAQ,YAAYoB,QAAS,WAxFrC,IAAoBjC,IAwFmC2J,EAAKO,WAvF1D5K,EAAMW,qBAAqBD,GAC3BT,EAAQW,KAAR,gCAgFU,UAOC,cAAC,KAAD,IAPD,yBASA,eAAC4B,EAAA,EAAD,CAAQiI,MAAO,CACfC,aAAc,GACdtL,gBAAiB,UACjB4L,QAAS,YACTxF,SAAU,QACXzE,UAAWZ,EAAQ+I,KACtB3H,QAAQ,YAAYoB,QAAS,WArGrC,IAAmBjC,IAqGmC2J,EAAKO,WApGzD5K,EAAMW,qBAAqBD,GAC3BT,EAAQW,KAAR,4BA6FU,UAOE,cAAC,KAAD,IAPF,8BA3E4ByJ,EAAKc,WAuFjC,6BAGJ,eAAC,KAAD,CAAMpK,UAAWZ,EAAQ1B,KAAzB,UACE,cAAC+L,GAAA,EAAD,UACE,eAACxJ,EAAA,EAAD,WACE,cAACM,EAAA,EAAD,CAAYqJ,cAAY,EAACpJ,QAAQ,KAAKL,UAAU,KAAhD,wBAGA,cAACI,EAAA,EAAD,CAAYC,QAAQ,QAAQmB,MAAM,gBAAgBxB,UAAU,IAA5D,4BAKJ,eAAC6J,GAAA,EAAD,WACE,cAACvI,EAAA,EAAD,CAAQ4I,KAAK,QAAQ1I,MAAM,UAA3B,mBAGA,cAACF,EAAA,EAAD,CAAQ4I,KAAK,QAAQ1I,MAAM,UAA3B,6BAfgC,SCzKjC2I,GAAe,uCAAG,WAAOnD,EAAmBD,EAAiBqD,GAA3C,iBAAAzN,EAAA,6DAEvB0N,EAAY,CACZrD,aACAD,aACAqD,eAGJvN,QAAQC,IAAIuN,GARe,kBAWPlO,EAAaY,KAAK,WAAYsN,GAXvB,cAWnBrN,EAXmB,OAYvBH,QAAQC,IAAIE,EAAIC,MAZO,kBAahBD,EAAIC,MAbY,qCAevBJ,QAAQC,IAAR,OACG,KAAEI,SAhBkB,uBAiBb,IAAIC,MAAM,KAAED,SAASD,MAjBR,cAmBb,IAAIE,MAAM,6BAnBG,0DAAH,0DCKtBC,GAAYC,aAAW,SAACC,GAAD,OAC3BuL,YAAa,CACXtL,KAAM,CACJ,uBAAwB,CACtBU,OAAQX,EAAMM,QAAQ,GACtBW,MAAO,OACPd,WAAY,YAGhBgB,YAAa,CACTR,OAAQX,EAAMM,QAAQ,GACtBJ,SAAU,GACVe,MAAO,MACPV,QAAS,OAETE,WAAY,OACZN,WAAY,WAEdwK,IAAK,CACHzG,MAAO,WAET8I,GAAI,CACFC,UAAW,gBAYNC,GAAuD,SAAC1L,GAEnE,IAAMG,EAAU7B,KAF8D,EAG/C8B,mBAAS,wCAHsC,mBAGvEuL,EAHuE,KAG/DC,EAH+D,OAIzDxL,mBAASJ,EAAMM,aAA7B2H,EAJuE,sBAKxD7H,mBAASJ,EAAM6H,gBAA9ByD,EALuE,oBAWxEO,EAAwB,uCAAG,WAAOrL,GAAP,eAAA3C,EAAA,6DAE/B2C,EAAEC,iBAF6B,kBAMH4K,GACxBM,EACA1D,EACAqD,GAT2B,OAMxBI,EANwB,OAa5B3N,QAAQC,IAAI0N,GACZI,MAAM,2BAdsB,gDAgB5B/N,QAAQC,IAAI,KAAE6C,SAhBc,yDAAH,sDAqB9B,OACE,qCAEA,qBAAIE,UAAWZ,EAAQgJ,IAAvB,+BAA+CnJ,EAAM6H,eAAelK,eACpE,sBAAM6D,SAAYqK,EAA0B9K,UAAWZ,EAAQ1B,KAAMgD,YAAU,EAACC,aAAa,MAA7F,SACA,qBAAKX,UAAWZ,EAAQqL,GAAxB,SACE,eAAC1K,EAAA,EAAD,CAAMC,UAAWZ,EAAQ1B,KAAzB,UAEE,cAACsD,EAAA,EAAD,CACEC,MAAS2J,EACT1J,SAnCa,SAAC8J,GACpBH,EAAaG,EAAM7J,OAAOF,QAmCpBK,GAAG,4BACHC,MAAM,SACN0J,WAAS,EACTC,KAAM,GACN1K,QAAQ,aAEZ,uBACE,cAACiB,EAAA,EAAD,CACIC,KAAK,SAELlB,QAAQ,YACRmB,MAAM,UAJV,oBASA,uBAAS,kCCpGJwJ,GAAmB,uCAAG,WAAOtO,GAAP,eAAAC,EAAA,sEAE3BE,QAAQC,IAAIJ,GAFe,SAGXP,EAAakH,IAAb,qBAA+B3G,IAHpB,cAGvBM,EAHuB,OAI3BH,QAAQC,IAAIE,EAAIC,MAJW,kBAKpBD,EAAIC,MALgB,mCAO3BJ,QAAQC,IAAR,OACG,KAAEI,SARsB,uBASjB,IAAIC,MAAM,KAAED,SAASD,MATJ,cAWjB,IAAIE,MAAM,oCAXO,yDAAH,sDC4B1BC,GAAYC,MAAW,SAACC,GAAD,MAAmB,CAC5CC,KAAM,CACFC,SAAU,IACVC,WAAY,WAEdwN,UAAW,CACT1M,MAAO,IACP2M,OAAQ,KAEVvM,KAAM,CACJ6C,MAAO,eAKF2J,GAAkE,SAACrM,GAE5E,IAAMG,EAAU7B,KAEZ2B,EAAUC,cAJwE,EAM/CE,mBAAS,IAAIyG,MANkC,mBAM/EyF,EAN+E,KAMnEC,EANmE,OAS7DnM,mBAASJ,EAAMM,YAAYuF,QATkC,uBAUzDzF,mBAASJ,EAAM6H,iBAKtC2E,GAfgF,oBAezD,uCAAG,WAAOhM,GAAP,mBAAA3C,EAAA,6DAE5B2C,EAAEC,kBAEEgM,EAAkB,IAAI5F,KAAKyF,IACfI,SAASD,EAAgBE,WAAWF,EAAgBG,aAAa,GAAG,EAAE,GAElFC,EAAe,IAAIhG,KAAKyF,GAPA,kBAYAtH,GAAkBhF,EAAMM,YAAaN,EAAM6H,eAAgBgF,EAAcJ,EAAiBzM,EAAM8M,gBAZhG,OAYpBnI,EAZoB,OAaxB5G,QAAQC,IAAI2G,GACZ1E,EAAQW,KAAK,cAdW,kDAkB1B7C,QAAQC,IAAR,MAlB0B,0DAAH,uDAsB7B,OACI,qCACA,qBAAI+C,UAAWZ,EAAQN,KAAvB,qCAAqD,uBACpDG,EAAM6H,eAAelK,eACtB,cAACmD,EAAA,EAAD,CAAMC,UAAWZ,EAAQ1B,KAAzB,SACA,cAACkD,EAAA,EAAD,CACMC,WAAS,EACTiJ,UAAU,SACVjI,QAAQ,aACR3D,WAAW,SAJjB,SAOA,uBAAMuC,SAAYgL,EAA0B/K,YAAU,EAAtD,UACD,uBACC,cAACM,EAAA,EAAD,CACEM,GAAG,iBACHC,MAAM,mBACNG,KAAK,iBACLT,MAASsK,EACTrK,SA7CyB,SAAC8J,GAC5BQ,EAAiBR,EAAM7J,OAAOF,QA6C5B+K,aAAa,mBAEbC,gBAAiB,CACfC,QAAQ,KAGZ,uBAAS,uBACT,cAACzK,EAAA,EAAD,CACIC,KAAK,SACLlB,QAAQ,YACRmB,MAAM,UAHV,sBAOE,uBAAS,kCCzEbpE,GAAYC,aAAW,SAACC,GAAD,OAC3BuL,YAAa,CACXtL,KAAM,CACJM,QAAS,QAEXmO,OAAQ,CACNC,OAAQ3O,EAAM2O,OAAOC,OAAS,EAC9BzO,WAAY,SAEdyO,OAAQ,CACN3N,MAZc,IAad4N,WAAY,GAEdC,YAAa,CACX7N,MAhBc,KAkBhB8N,gBAAiB,CACfC,SAAU,OACV7O,WAAY,UACZ8I,UAAW,QACX3H,WAAY,QAEd2N,QAAS,CACPC,SAAU,EACV1C,QAASxM,EAAMM,QAAQ,IAEzB6O,SAAU,CACRC,YAAa,EACbpK,UAAW,GACXrC,SAAU,IAEZ0M,SAAU,CACRnL,MAAO,WAEToL,aAAc,CACZpL,MAAO,WAETqL,aAAc,CACZrL,MAAO,WAETsL,WAAY,CACVtL,MAAO,UACP5C,WAAY,QAEdmO,SAAU,CACRnO,WAAY,aAeLoO,GAA8D,SACzElO,GACI,IAAD,EAE8BI,wBAAkB+N,GAFhD,mBAEIzN,EAFJ,KAEa0N,EAFb,OAG8BhO,wBAAkB+N,GAHhD,mBAGIlD,EAHJ,KAGaoD,EAHb,KAKHzI,qBAAU,WACiC,IAAtC5F,EAAMM,YAAYgD,SAASC,QAEZ,uCAAG,4BAAA1F,EAAA,sEACaqO,GAAoBlM,EAAMM,YAAYuF,QADnD,OACbyI,EADa,OAEjBF,EAAcE,GACdvQ,QAAQC,IAAIsQ,GAHK,2CAAH,oDAMhBC,KAEF,IAEF,IAAMpO,EAAU7B,KAlBb,EAmBekQ,cAAbC,EAnBF,EAmBEA,KACDxO,GApBD,EAmBQyO,IACGxO,eA8Bd,OACE,sBAAKa,UAAWZ,EAAQ1B,KAAxB,UACE,cAAC2C,EAAA,EAAD,IACA,cAACuN,EAAA,EAAD,CAAQC,SAAS,QAAQ7N,UAAWZ,EAAQ+M,OAA5C,SACE,eAAC2B,EAAA,EAAD,WACE,qBAAKC,IAA8B,UAAWC,IAAI,OAAQhO,UAAWZ,EAAQwN,WAC7E,cAACrM,EAAA,EAAD,CAAYP,UAAWZ,EAAQ6N,WAAYzM,QAAQ,KAAKyN,QAAM,EAA9D,8BAKJ,eAACC,EAAA,EAAD,CACElO,UAAWZ,EAAQiN,OACnB7L,QAAQ,YACRpB,QAAS,CACPvB,MAAOuB,EAAQmN,aAJnB,UAOE,cAACuB,EAAA,EAAD,IACA,sBAAK9N,UAAWZ,EAAQoN,gBAAxB,UACIvN,EAAMM,aAAqD,IAAtCN,EAAMM,YAAYgD,SAASC,OAChD,cAAC2L,EAAA,EAAD,UACG,CAAC,UAAW,6BAA6B,gBAAiB,UAAUzI,KACnE,SAACyC,EAAMiG,GAAP,OACE,eAACC,EAAA,EAAD,CACEC,QAAM,EAEN1M,QAAS,YAvD3B,SAAsBwM,GACN,IAAVA,EACFlP,EAAQW,KAAR,UAAgB6N,EAAhB,kBACmB,IAAVU,EACTlP,EAAQW,KAAR,UAAgB6N,EAAhB,sBACmB,IAAVU,EACTlP,EAAQW,KAAR,UAAgB6N,EAAhB,uBAEAxO,EAAQW,KAAK,KAgDG0O,CAAaH,IAJjB,UAOE,cAACI,EAAA,EAAD,UACa,IAAVJ,EACC,cAAC,IAAD,CAAUpO,UAAWZ,EAAQ0N,WACjB,IAAVsB,EACF,cAAC,KAAD,CAAcpO,UAAWZ,EAAQ2N,eACrB,IAAVqB,EACF,cAAC,KAAD,CAAoBpO,UAAWZ,EAAQ4N,eAEvC,cAAC,KAAD,CAAerL,MAAM,gBAGzB,cAAC8M,EAAA,EAAD,CAAcC,QAASvG,MAhBlBA,QAqBTlJ,EAAMM,aAAqD,IAAtCN,EAAMM,YAAYgD,SAASC,OACpD,cAAC2L,EAAA,EAAD,UACG,CACC,aACA,oBACA,+BACA,gBACA,UACAzI,KAAI,SAACyC,EAAMiG,GAAP,OACJ,eAACC,EAAA,EAAD,CACEC,QAAM,EAEN1M,QAAS,YA3EzB,SAA+BwM,GACf,IAAVA,EACFlP,EAAQW,KAAR,UAAgB6N,EAAhB,sBACmB,IAAVU,EACTlP,EAAQW,KAAR,UAAgB6N,EAAhB,sBACmB,IAAVU,EACTlP,EAAQW,KAAR,UAAgB6N,EAAhB,yBACmB,IAAVU,EACTlP,EAAQW,KAAR,UAAgB6N,EAAhB,kBACmB,IAAVU,EACTlP,EAAQW,KAAK,KAEbX,EAAQW,KAAK,cAgEC8O,CAAsBP,IAJ1B,UAOE,cAACI,EAAA,EAAD,UACa,IAAVJ,EACC,cAAC,KAAD,CAAmBpO,UAAWZ,EAAQ0N,WAC1B,IAAVsB,EACF,cAAC,KAAD,CAAgBpO,UAAWZ,EAAQ0N,WACvB,IAAVsB,EACF,cAAC,KAAD,CAAcpO,UAAWZ,EAAQ0N,WACrB,IAAVsB,EACF,cAAC,IAAD,CAAWpO,UAAWZ,EAAQ0N,WAE9B,cAAC,KAAD,CAAenL,MAAM,gBAGzB,cAAC8M,EAAA,EAAD,CAAcC,QAASvG,MAlBlBA,QAqBD,+CAEZ,cAACyG,EAAA,EAAD,UAGJ,uBAAM5O,UAAWZ,EAAQsN,QAAzB,UACE,cAACoB,EAAA,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOJ,KAAI,UAAKA,EAAL,iBAAX,SACE,cAAC,GAAD,CACEvK,kBAAmBlE,EAAMkE,kBACzB5D,YAAaN,EAAMM,gBAIvB,cAAC,IAAD,CAAOmO,KAAI,UAAKA,EAAL,qBAAX,SACE,cAAC,GAAD,CACEvK,kBAAmBlE,EAAMkE,kBACzB5D,YAAaN,EAAMM,YACnBuH,eAAgBnH,MAGpB,cAAC,IAAD,CAAO+N,KAAI,UAAKA,EAAL,qBAAX,SACE,cAAC,GAAD,CACEvK,kBAAmBlE,EAAMkE,kBACzB5D,YAAaN,EAAMM,gBAGvB,cAAC,IAAD,CAAOmO,KAAI,UAAKA,EAAL,wBAAX,SACE,cAAC,GAAD,CACEvK,kBAAmBlE,EAAMkE,kBACzB5D,YAAaN,EAAMM,YACnBK,qBAAsByN,EACtBvG,eAAgBnH,MAIpB,cAAC,IAAD,CAAO+N,KAAI,UAAKA,EAAL,uBAAX,SACE,cAAC,GAAD,CACEvK,kBAAmBlE,EAAMkE,kBACzB5D,YAAaN,EAAMM,gBAGvB,cAAC,IAAD,CAAOmO,KAAI,UAAKA,EAAL,qBAAX,SACE,cAAC,GAAD,CACEvK,kBAAmBlE,EAAMkE,kBACzB5D,YAAaN,EAAMM,YACnBK,qBAAwBX,EAAMW,qBAC9BkH,eAAkBnH,MAGtB,cAAC,IAAD,CAAO+N,KAAI,UAAKA,EAAL,oBAAX,SACE,cAAC,GAAD,CACEvK,kBAAmBlE,EAAMkE,kBACzB5D,YAAaN,EAAMM,YACnBK,qBAAwBX,EAAMW,qBAC9BkH,eAAkBnH,EAElBwK,qBAAwBmD,EACxBvB,eAAkB7B,MAGtB,cAAC,IAAD,CAAOwD,KAAI,UAAKA,EAAL,iBAAX,SACE,cAAC,GAAD,CACEvK,kBAAmBlE,EAAMkE,kBACzB5D,YAAaN,EAAMM,YACnBuH,eAAgBnH,MAGpB,cAAC,IAAD,CAAO+N,KAAI,UAAKA,EAAL,sBAAX,SACE,cAAC,GAAD,CACEvK,kBAAmBlE,EAAMkE,kBACzB5D,YAAaN,EAAMM,YACnBK,qBAAwByN,EACxBvG,eAAkBnH,EAClBwK,qBAAwBmD,EACxBvB,eAAkB7B,MAGtB,cAAC,IAAD,CAAOwD,KAAI,UAAKA,EAAL,iBAAX,SACE,cAAC,GAAD,CACEvK,kBAAmBlE,EAAMkE,kBACzB5D,YAAaN,EAAMM,YACnBK,qBAAwBX,EAAMW,qBAC9BkH,eAAkBnH,gBC5TnBkP,GAAO,uCAAG,WAAO1M,EAAkBC,GAAzB,iBAAAtF,EAAA,6DACfgS,EAAc,CACd3M,WACAC,YAHe,kBAOC9F,EAAaY,KAAK,QAAS4R,GAP5B,cAOX3R,EAPW,OAQfH,QAAQC,IAAIE,EAAIC,MARD,kBASRD,EAAIC,MATI,mCAWfJ,QAAQC,IAAR,OACG,KAAEI,SAZU,uBAaL,IAAIC,MAAM,KAAED,SAASD,MAbhB,cAeL,IAAIE,MAAM,6BAfL,yDAAH,wDAoBPyR,GAAiB,uCAAG,WAAO9M,EAAkBC,EAAiBC,EAAiBC,EAAiBC,GAA5E,iBAAAvF,EAAA,6DAEzBkS,EAAc,CACV/M,YACAC,WACAC,WACAC,WACAC,QACAE,SAAU,CACNC,OAAQ,IAIpBxF,QAAQC,IAAI+R,GAbiB,kBAgBT1S,EAAaY,KAAK,SAAU8R,GAhBnB,cAgBrB7R,EAhBqB,OAiBzBH,QAAQC,IAAIE,EAAIC,MAjBS,kBAkBlBD,EAAIC,MAlBc,qCAoBzBJ,QAAQC,IAAR,OACG,KAAEI,SArBoB,uBAsBf,IAAIC,MAAM,KAAED,SAASD,MAtBN,cAwBf,IAAIE,MAAM,6BAxBK,0DAAH,8DCHxBC,GAAYC,YAAW,CAC3BE,KAAM,CACJC,SAAU,IACVC,WAAY,WAEdqR,OAAQ,CACNjR,QAAS,eACTI,OAAQ,QACR8Q,UAAW,cAEbhJ,MAAO,CACLzB,SAAU,IAEZ0B,IAAK,CACHC,aAAc,IAEhB+I,SAAU,CACR9D,OAAQ,IACR3M,MAAM,IACNiL,aAAc,KAEhByF,QAAS,CACPhJ,aAAc,IACdtI,UAAW,KAIFuR,GAAkD,SAACpQ,GAC9D,IAAMG,EAAU7B,KADwD,EAGrC8B,mBAAS,IAH4B,mBAGjE8C,EAHiE,KAGvDW,EAHuD,OAIrCzD,mBAAS,IAJ4B,mBAIjE+C,EAJiE,KAIvDW,EAJuD,KAMpE7D,EAAUC,cAYRmQ,EAAiB,uCAAG,WAAO7P,GAAP,eAAA3C,EAAA,6DAExB2C,EAAEC,iBAFsB,kBAKLmP,GAAQ1M,EAAUC,GALb,OAKlBuG,EALkB,OAMtB1J,EAAMkE,kBAAkBwF,GACxB3L,QAAQC,IAAI0L,GACRA,GAEFzJ,EAAQW,KAAK,cAVO,kDAatBkD,EAAe,IAbO,0DAAH,sDAiBvB,OACE,qCACE,qBAAK/C,UAAWZ,EAAQgQ,QAAxB,SACE,qBACErB,IAA8B,aAC9BC,IAAI,OACJhO,UAAWZ,EAAQ+P,aAGvB,cAACpP,EAAA,EAAD,CAAMC,UAAWZ,EAAQ1B,KAAzB,SACE,eAACuC,EAAA,EAAD,WACE,cAACM,EAAA,EAAD,CAAYP,UAAWZ,EAAQ+G,IAAK3F,QAAQ,KAAKL,UAAU,KAA3D,mBAGA,sBAAMM,SAAU6O,EAAmB5O,YAAU,EAACC,aAAa,MAA3D,SACE,eAACC,EAAA,EAAD,CACEC,WAAS,EACTiJ,UAAU,SACVjI,QAAQ,aACR3D,WAAW,SACXH,QAAS,EALX,UAOE,cAAC6C,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACE,EAAA,EAAD,CACEC,MAAOkB,EACPjB,SApDa,SAACzB,GAC5BqD,EAAerD,EAAE0B,OAAOF,QAoDVK,GAAG,iBACHI,KAAK,OACLH,MAAM,WACNf,QAAQ,WACRG,aAAa,UAGjB,cAACC,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACE,EAAA,EAAD,CACEC,MAAOmB,EACPlB,SA1Da,SAACzB,GAC5BsD,EAAetD,EAAE0B,OAAOF,QA0DVK,GAAG,iBACHI,KAAK,WACLH,MAAM,WACNf,QAAQ,WACRG,aAAa,UAGjB,cAACC,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASlB,QAAQ,YAAYmB,MAAM,UAAhD,oCCzHVpE,GAAYC,YAAW,CAC3BE,KAAM,CACJC,SAAU,IACVC,WAAY,UACZE,WAAY,IAEdmR,OAAQ,CACNjR,QAAS,eACTI,OAAQ,QACR8Q,UAAW,cAEbhJ,MAAO,CACLzB,SAAU,IAEZ0B,IAAK,CACHC,aAAc,IAEhB+I,SAAU,CACR9D,OAAQ,IACR3M,MAAM,IACNiL,aAAc,KAEhByF,QAAS,CACPhJ,aAAc,IACdtI,UAAW,KAIFyR,GAA4C,SAACtQ,GACxD,IAAMG,EAAU7B,KAEZ2B,EAAUC,cAad,OACE,qCACA,qBAAKa,UAAWZ,EAAQgQ,QAAxB,SACE,qBAAKrB,IAA8B,aAAcC,IAAI,OAAQhO,UAAWZ,EAAQ+P,aAElF,8BACE,cAACpP,EAAA,EAAD,CAAMC,UAAWZ,EAAQ1B,KAAzB,SACE,eAACuC,EAAA,EAAD,WACE,cAACM,EAAA,EAAD,CAAYP,UAAWZ,EAAQ+G,IAAK3F,QAAQ,KAAKL,UAAU,KAA3D,oCAGA,eAACS,EAAA,EAAD,CACEC,WAAS,EACTiJ,UAAU,SACVjI,QAAQ,aACR3D,WAAW,SACXH,QAAS,EALX,UAOE,cAAC6C,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACW,EAAA,EAAD,CAAQjB,QAAQ,YAAYmB,MAAM,UAAUC,QA9BrC,WACjB1C,EAAQW,KAAK,WA6BH,qBAKF,cAACe,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACW,EAAA,EAAD,CACEjB,QAAQ,YACRmB,MAAM,UACNC,QAhCgB,WAC5B1C,EAAQW,KAAK,sBA4BH,oCAQF,cAACe,EAAA,EAAD,CAAME,MAAI,EAAV,SACA,cAACW,EAAA,EAAD,CACIjB,QAAQ,YACRmB,MAAM,UACNC,QA7CiB,WAC7B1C,EAAQW,KAAK,uBAyCL,mD,OC9CZ,IAAMtC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,IACV8E,UAAW,IACX7E,WAAY,WAGdC,MAAO,CACLC,UAAWL,EAAMM,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQX,EAAMM,QAAQ,GACtBM,gBAAiBZ,EAAMa,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWL,EAAMM,QAAQ,IAE3BY,OAAQ,CACNP,OAAQX,EAAMM,QAAQ,EAAG,EAAG,IAE9B2E,GAAG,CACD3D,WAAY,YAIFyQ,GAA4D,SAACvQ,GACzE,IAAMG,EAAU7B,KACZ2B,EAAUC,cAFqE,EAK9CE,mBAAS,IALqC,mBAK5E4C,EAL4E,KAKjEW,EALiE,OAMhDvD,mBAAS,IANuC,mBAM5E6C,EAN4E,KAMlEW,EANkE,OAOhDxD,mBAAS,IAPuC,mBAO5E8C,EAP4E,KAOlEW,EAPkE,OAQhDzD,mBAAS,IARuC,mBAQ5E+C,EAR4E,KAQlEW,EARkE,OAStD1D,mBAAS,IAT6C,mBAS5EgD,EAT4E,KASrEW,EATqE,KA8B3EyM,EAAoB,uCAAI,WAAOhQ,GAAP,eAAA3C,EAAA,6DAG3B2C,EAAEC,iBAHyB,kBAMLqP,GACrB9M,EACAC,EACAC,EACAC,EACAC,GAX0B,OAMvBqN,EANuB,OAa3BzQ,EAAMkE,kBAAkBuM,GAClBA,GACDxQ,EAAQW,KAAK,cAfS,gDAkB1B7C,QAAQC,IAAI,KAAE6C,SAlBY,yDAAJ,sDAuB5B,OACE,cAACC,EAAA,EAAD,CAAMC,UAAWZ,EAAQ1B,KAAzB,SACA,eAACwC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,sBAAKL,UAAWZ,EAAQvB,MAAxB,UACE,cAACyC,EAAA,EAAD,CAAQN,UAAWZ,EAAQjB,SAG3B,cAACoC,EAAA,EAAD,CAAYP,UAAWZ,EAAQsD,GAAIvC,UAAU,KAAKK,QAAQ,KAA1D,mCAGF,uBACE,uBAAMC,SAAUgP,EAAsB/O,YAAU,EAACC,aAAa,MAA9D,UACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAC9C,QAAS,EAAzB,UACE,cAAC6C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIqC,GAAI,EAAvB,SACE,cAACpC,EAAA,EAAD,CACEL,aAAa,QACbM,MAASgB,EACTf,SA5DgB,SAACzB,GAC7BmD,EAAgBnD,EAAE0B,OAAOF,QA4DbO,KAAK,YACLhB,QAAQ,WACRY,UAAQ,EACRC,WAAS,EACTC,GAAG,YACHC,MAAM,aACN8B,WAAS,MAGb,cAACzC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIqC,GAAI,EAAvB,SACE,cAACpC,EAAA,EAAD,CACEC,MAASiB,EACThB,SArEe,SAACzB,GAC5BoD,EAAepD,EAAE0B,OAAOF,QAqEZT,QAAQ,WACRY,UAAQ,EACRC,WAAS,EACTC,GAAG,WACHC,MAAM,YACNC,KAAK,WACLb,aAAa,YAGjB,cAACC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,MAASkB,EACTjB,SA/Ee,SAACzB,GAC5BqD,EAAerD,EAAE0B,OAAOF,QA+EZT,QAAQ,WACRY,UAAQ,EACRC,WAAS,EACTC,GAAG,WACHC,MAAM,YACNC,KAAK,WACLb,aAAa,eAGjB,cAACC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,MAASmB,EACTlB,SAzFe,SAACzB,GAC5BsD,EAAetD,EAAE0B,OAAOF,QAyFZT,QAAQ,WACRY,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNG,KAAK,WACLJ,GAAG,WACHX,aAAa,uBAGjB,cAACC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,MAASoB,EACTnB,SAnGY,SAACzB,GACzBuD,EAAYvD,EAAE0B,OAAOF,QAmGTT,QAAQ,WACRY,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,QACNC,KAAK,QACLb,aAAa,eAInB,uBACA,cAACc,EAAA,EAAD,CAEEC,KAAK,SACLL,WAAS,EACTb,QAAQ,YACRmB,MAAM,UALR,4BAYJ,cAACG,EAAA,EAAD,CAAKC,GAAI,U,8BClNF4N,GAAgB,uCAAG,WAAO5F,EAAkB/D,EAAmB6D,GAA5C,iBAAA/M,EAAA,6DAExB8S,EAAa,CACb7F,eACA/D,aAAc,CACFoE,UAAWpE,GAEvB6D,cAGJ7M,QAAQC,IAAI2S,GAVgB,kBAaRtT,EAAaY,KAAK,aAAc0S,GAbxB,cAapBzS,EAboB,OAcxBH,QAAQC,IAAIE,EAAIC,MAdQ,kBAejBD,EAAIC,MAfa,qCAiBxBJ,QAAQC,IAAR,OACG,KAAEI,SAlBmB,uBAmBd,IAAIC,MAAM,KAAED,SAASD,MAnBP,cAqBd,IAAIE,MAAM,6BArBI,0DAAH,0DCyCvBC,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC5CC,KAAM,CACFC,SAAU,IACVC,WAAY,UACZ6E,UAAW,KAEf5E,MAAO,CACLC,UAAWL,EAAMM,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQX,EAAMM,QAAQ,GACtBM,gBAAiBZ,EAAMa,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWL,EAAMM,QAAQ,IAE3BY,OAAQ,CACNP,OAAQX,EAAMM,QAAQ,EAAG,EAAG,IAE9Ba,YAAa,CACTR,OAAQX,EAAMM,QAAQ,GACtBJ,SAAU,IACVe,MAAO,OACPV,QAAS,OAETE,WAAY,QAGdW,YAAa,CACXf,UAAWL,EAAMM,QAAQ,IAE7Be,KAAM,CACJC,WAAY,YAMH8Q,GAA0E,SAAC5Q,GAEtF,IAAIC,EAAUC,cACRC,EAAU7B,KAHgF,EAKrD8B,mBAAS,IAL4C,mBAKzF0K,EALyF,KAK3E+F,EAL2E,OAMvDzQ,mBAAS,IAN8C,mBAMzF4G,EANyF,KAM5E8J,EAN4E,OAOvD1Q,mBAASJ,EAAM6H,gBAPwC,mBAOzF+C,EAPyF,UA+BhG,IAAMmG,EAAa,uCAAG,WAAOvQ,GAAP,eAAA3C,EAAA,6DAGlB2C,EAAEC,iBAHgB,kBAOMiQ,GAChB5F,EACA9D,EACA4D,GAVU,QAOVlK,EAPU,UAcVV,EAAMW,qBAAqBD,GAC3BT,EAAQW,KAAK,eAGjB7C,QAAQC,IAAI,WAlBE,gDAoBdD,QAAQC,IAAI,KAAE6C,SApBA,yDAAH,sDA2BnB,OACA,cAACC,EAAA,EAAD,CAAMC,UAAWZ,EAAQ1B,KAAzB,SACI,cAACuC,EAAA,EAAD,UACA,eAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACI,cAACC,EAAA,EAAD,IACA,sBAAKL,UAAWZ,EAAQvB,MAAxB,UACI,cAACyC,EAAA,EAAD,CAAQN,UAAWZ,EAAQjB,SAElB,uBACT,cAACoC,EAAA,EAAD,CAAYP,UAAWZ,EAAQN,KAAMqB,UAAU,KAAKK,QAAQ,KAA5D,8CAEa,uBACb,eAACyP,GAAA,EAAD,CAAazP,QAAQ,WAArB,UACF,cAAC0P,GAAA,EAAD,CAAYC,QAAQ,8BAApB,kBACA,eAACC,GAAA,EAAD,CAEEC,QAAM,EACNpP,MAAOgF,EACP/E,SA9DoB,SAC5BzB,GAEAsQ,EAAkBtQ,EAAE0B,OAAOF,QA4DnBM,MAAM,eACN+O,WAAY,CACV9O,KAAM,OACNF,GAAI,+BARR,UAWE,wBAAQ8D,aAAW,OAAOnE,MAAM,KAChC,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,yBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,2BACO,0BAEP,uBAAMR,SAAUuP,EAAetP,YAAU,EAACC,aAAa,MAAvD,UACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAC9C,QAAS,EAAzB,UACI,cAAC6C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,CAEIC,MAAO8I,EAEP7I,SAvFD,SAACzB,GACxBqQ,EAAmBrQ,EAAE0B,OAAOF,QAuFJT,QAAQ,WACRY,UAAQ,EACRC,WAAS,EACTC,GAAG,eACHC,MAAM,gBACNC,KAAK,eACLb,aAAa,mBAErB,cAACC,EAAA,EAAD,CAAME,MAAI,OAMd,cAACW,EAAA,EAAD,CACIC,KAAK,SACLL,WAAS,EACTb,QAAQ,YACRmB,MAAM,UACNC,QA5FpB,WACI5E,QAAQC,IAAI,uBAsFA,oBASA,cAAC2D,EAAA,EAAD,CAAMC,WAAS,EAACgB,QAAQ,WAAxB,SACI,cAACjB,EAAA,EAAD,CAAME,MAAI,YAKtB,cAACgB,EAAA,EAAD,CAAKC,GAAI,YCxJNwO,OA7Cf,WAAgB,IAAD,EACclR,qBADd,mBACNsJ,EADM,KACA6H,EADA,OAEoBnR,qBAFpB,mBAENM,EAFM,KAEG0N,EAFH,KAOb,OACE,qBAAKrN,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SAEA,eAAC,IAAD,WACA,cAAC,IAAD,CAAO0N,KAAM,gBAAb,SACA,cAAC,GAAD,CAAcvK,kBAAmBqN,EAAYjR,YAAaoJ,EAAM/I,qBAAwByN,EAAevG,eAAkBnH,MAGzH,cAAC,IAAD,CAAO+N,KAAM,4BAAb,SACA,cAAC,EAAD,CAA0BvK,kBAAmBqN,EAAYjR,YAAaoJ,EAAM/I,qBAAwByN,EAAevG,eAAkBnH,MAErI,cAAC,IAAD,CAAO+N,KAAK,aAAZ,SACE,cAAC,GAAD,CAAevK,kBAAmBqN,EAAYjR,YAAaoJ,EAAM/I,qBAAwByN,EAAevG,eAAkBnH,MAE5H,cAAC,IAAD,CAAO8Q,OAAK,EAAC/C,KAAK,SAAlB,SACE,cAAC,GAAD,CAAWvK,kBAAmBqN,EAAYjR,YAAaoJ,MAEzD,cAAC,IAAD,CAAO+E,KAAM,qBAAqB+C,OAAK,EAACtQ,UAAawC,EAArD,SACE,cAAC,EAAD,CAAmBQ,kBAAmBqN,EAAYjR,YAAaoJ,MAEjE,cAAC,IAAD,CAAO+E,KAAM,mBAAmB+C,OAAK,EAACtQ,UAAa0P,GAAnD,SACE,cAAC,GAAD,CAAiB1M,kBAAmBqN,EAAYjR,YAAaoJ,EAAM/I,qBAAwByN,EAAevG,eAAkBnH,MAG9H,cAAC,IAAD,CAAO+N,KAAM,oBAAoB+C,OAAK,EAACtQ,UAAaqP,GAApD,SACE,cAAC,GAAD,CAAUrM,kBAAmBqN,EAAYjR,YAAaoJ,MAExD,cAAC,IAAD,CAAO8H,OAAK,EAAC/C,KAAK,IAAlB,SACE,cAAC,GAAD,cCvCOgD,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGdQ,IAASC,OAEP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAQ1Bb,O","file":"static/js/main.62e98ca5.chunk.js","sourcesContent":["import axios from 'axios'\n\n//this is where we config every single request for a certain api\nexport const  tradeStarApi = axios.create({\n    //You might need to add project name at end of url\n    baseURL:\"http://ec2-54-175-141-33.compute-1.amazonaws.com:10000/\",\n    headers:{\n        'Content-Type': \"application/json\"\n    }\n})\n","import {tradeStarApi} from \".\";\nimport { User } from \"../../models/User\";\n\nexport const createNewCompany = async (companyName:string, companyOwner: User) =>{\n\n    let newCompany = {\n            companyName,\n            companyOwner\n    }\n\n    console.log(newCompany)\n    try{\n\n        let res = await tradeStarApi.post('/companies', newCompany);\n        console.log(res.data);\n        return res.data;\n    }catch(e) {\n        console.log(e);\n        if(e.response){\n            throw new Error(e.response.data);\n        } else {\n            throw new Error(\"Oops something went wrong\")\n        }\n    }\n\n }","import Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nimport {\n    Card,\n    CardContent,\n  } from \"@material-ui/core\";\n\nimport Container from '@material-ui/core/Container';\nimport React, { useState } from \"react\";\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\n\nimport{ useHistory} from 'react-router-dom'\nimport { createNewCompany } from '../../remote/trade-stars/company-register-functions';\nimport { User } from '../../models/User';\nimport { Company } from '../../models/Company';\n\n\ninterface ITradesmenCompanyRegisterProps {\n    updateCurrentCompany: (c: Company) => void;\n    currentCompany: Company;\n    updateCurrentUser: (u: User) => void;\n    currentUser: User;\n  }\n\nconst linkStyle = {\n    color: 'white',\n    fontSize: 16,\n\n    \n    \n    \n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        minWidth: 275,\n        background: \"#e0a150\",\n      },\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 380,\n        width: '100%', \n        display: 'flex',\n        //flexDirection: 'column',\n        alignItems: 'left',\n\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    head: {\n        fontWeight: 'bold'\n    },\n}),\n);\n  \n  export const TradesmenCompanyRegister:React.FunctionComponent<ITradesmenCompanyRegisterProps> = (props) => {\n\n    let history = useHistory();\n    const classes = useStyles();\n\n    const [companyName, changeCompanyName] = useState(\"\");\n    const [companyType, changeCompanyType] = useState(\"\");\n    const [companyOwner, changeCompanyOwner] = useState(props.currentUser);\n\n\n    const handleCompanyNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        changeCompanyName(e.target.value);\n    };\n\n    const handlecompanyTypeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        changeCompanyType(e.target.value);\n    };\n\n    function clickHandler() {\n        console.log('Button was clicked');\n    }\n\n\n    // Synthetic event is from react for creating a standard event between different browsers\n    const handleSubmitTradesmenDesc = async (e: React.SyntheticEvent) => {\n\n        // Prevent default html submit behaviour\n        e.preventDefault();\n            \n        \n        \n        try {\n           // Submit new company to database\n            let company = await createNewCompany(\n                companyName,\n                companyOwner,\n            );\n\n            if (company) {\n                props.updateCurrentCompany(company)\n                history.push('/serviceregister');\n            }\n\n            console.log(\"company\");\n        } catch (e) {\n            console.log(e.message);\n        }\n\n\n\n    };\n\n    return (\n    <Card className={classes.root}>\n        <CardContent>\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n\n                </Avatar><br></br>\n                <Typography className={classes.head} component=\"h1\" variant=\"h5\">\n                    Tradesmen Registration Continued\n                </Typography><br></br>\n                <form onSubmit={handleSubmitTradesmenDesc} noValidate autoComplete=\"off\">\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                value={companyName}\n                                onChange={handleCompanyNameChange}\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"companyName\"\n                                label=\"Company Name\"\n                                name=\"companyName\"\n                                autoComplete=\"companyName\" />\n                        </Grid>\n                        {/* <Grid item xs={12}>\n                            <TextField\n                                value={companyType}\n                                onChange={handlecompanyTypeChange}\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"companyType\"\n                                label=\"companyType\"\n                                type=\"companyType\"\n                                id=\"companyType\"\n                                autoComplete=\"companyType\" />\n                        </Grid> */}\n\n                    </Grid><br></br>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={clickHandler}\n                    >\n                        Register\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={5}>\n\n            </Box>\n        </Container>\n        </CardContent>\n  </Card>\n    );\n}\n","import {tradeStarApi} from \".\";\n\nexport const createNewTradesmen = async (firstName:string, lastName:string, username:string, password:string, email: string) =>{\n\n    let newTradesmen = {\n            firstName,\n            lastName,\n            username,\n            password,\n            email,\n            userRole: {\n                roleId: 2\n            }\n    }\n\n    console.log(newTradesmen)\n    try{\n\n        let res = await tradeStarApi.post('/users', newTradesmen);\n        console.log(res.data);\n        return res.data;\n    }catch(e) {\n        console.log(e);\n        if(e.response){\n            throw new Error(e.response.data);\n        } else {\n            throw new Error(\"Oops something went wrong\")\n        }\n    }\n\n}","import Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport {\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport React, { useState } from \"react\";\nimport { createNewTradesmen } from '../../remote/trade-stars/ts-register-functions';\nimport { useHistory } from 'react-router-dom';\nimport { User } from '../../models/User';\n\ninterface ITradesmanRegisterProps {\n  updateCurrentUser: (u: User) => void;\n  currentUser: User;\n}\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    maxHeight: 575,\n    background: \"#e0a150\",\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  hd:{\n    fontWeight: 'bold'\n  }\n}));\n\nexport const  TradesmenRegister: React.FunctionComponent<ITradesmanRegisterProps> = (props) => {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const [firstName, changeFirstName] = useState(\"\");\n  const [lastName, changeLastName] = useState(\"\");\n  const [username, changeUsername] = useState(\"\");\n  const [password, changePassword] = useState(\"\");\n  const [email, changeEmail] = useState(\"\");\n\n\n  const handleFirstNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    changeFirstName(e.target.value);\n  };\n\n  const handleLastNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    changeLastName(e.target.value);\n  };\n  const handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    changeUsername(e.target.value);\n  };\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    changePassword(e.target.value);\n  };\n  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    changeEmail(e.target.value);\n\n  };\n\n\n  function clickHandler() {\n    //window.location.href = \"./TradesmenCompanyRegister\"\n    console.log(\"here\")\n  }\n\n\n    // Synthetic event is from react for creating a standard event between different browsers\n    const handleSubmitTradesmen =  async (e: React.SyntheticEvent) => {\n\n      // Prevent default html submit behaviour\n       e.preventDefault();\n      try{\n       //Submit new customer to database\n       let tradesmen =  await createNewTradesmen(\n        firstName,\n        lastName,\n        username,\n        password,\n        email\n       );\n        props.updateCurrentUser(tradesmen);\n        console.log(tradesmen);\n        if(tradesmen) {\n          history.push('/TradesmenCompanyRegister')\n        }\n       }catch  (e) {\n        console.log(e.message);\n      }\n\n    };\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n    \n        </Avatar>\n        <Typography className={classes.hd} component=\"h1\" variant=\"h5\">\n          Tradesmen Registration\n        </Typography><br></br>\n        <form onSubmit={handleSubmitTradesmen} noValidate autoComplete=\"off\">\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                value = {firstName}\n                onChange={handleFirstNameChange}\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                value = {lastName}\n                onChange={handleLastNameChange}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                value = {username}\n                onChange={handleUsernameChange}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"Username\"\n                label=\"User Name\"\n                name=\"UserName\"\n                autoComplete=\"Username\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                value = {password}\n                onChange={handlePasswordChange}\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                value = {email}\n                onChange={handleEmailChange}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            \n          </Grid>\n          <br></br>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick = {clickHandler}\n          >\n            Register\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              {/* <Link href=\"#\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link> */}\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n      </Box>\n    </Container>\n    </CardContent>\n  </Card>\n  );\n}","import { tradeStarApi } from '.';\nimport { Appointment } from '../../models/Appointment';\nimport { Company } from '../../models/Company';\nimport { Service } from '../../models/Service';\nimport { User } from '../../models/User';\n\nexport const getAllAppointments = async () => {\n    try {\n        let res = await tradeStarApi.get('/appointments');\n        console.log(res.data);\n        return res.data;\n    }catch(e) {\n        console.log(e);\n        if(e.response){\n            throw new Error(e.response.data);\n        } else {\n            throw new Error(\"Unable to fetch all appointments\")\n        }\n    }\n}\n\nexport const getAllAppointmentsByCompanyId = async (companyId: number) => {\n    try {\n        let res = await tradeStarApi.get(`/appointments/${companyId}`);\n        console.log(res.data);\n        return res.data;\n    }catch(e) {\n        console.log(e);\n        if(e.response){\n            throw new Error(e.response.data);\n        } else {\n            throw new Error(\"Unable to fetch all appointments\")\n        }\n    }\n}\n\nexport const getAllAppointmentsByCustomerId = async (customerId: number) => {\n    try{\n        let res = await tradeStarApi.get(`/appointments/customer/${customerId}`);\n        console.log(res.data);\n        return res.data;\n    }catch(e) {\n        console.log(e);\n        if(e.response){\n            throw new Error(e.response.data);\n        } else {\n            throw new Error(\"Unable to fetch all appointments\")\n        }\n    }\n}\n\nexport const updateAppointmentCompletedById = async (appointment: Appointment, isCompleted:boolean) => {\n\n    let updatedAppt = {\n        ...appointment,\n        appointmentCompleted: isCompleted\n    }\n\n    try {\n        let res = await tradeStarApi.put(`/appointments`, updatedAppt);\n        console.log(res.data);\n        return res.data;\n    }catch(e) {\n        console.log(e);\n        if(e.response){\n            throw new Error(e.response.data);\n        } else {\n            throw new Error(\"Unable to fetch all appointments\")\n        }\n    }\n}\n\nexport const createAppointment = async (customerId: User, companyId: Company, appointmentStart: Date, appointmentEnd: Date, forService: Service) =>{\n\n    let newAppointment = {\n        customerId,\n        companyId,\n        appointmentStart,\n        appointmentEnd,\n        forService,\n        appointmentConfirmed: false,\n        appointmentCompleted: false\n    }\n\n    console.log(newAppointment)\n    try{\n\n        let res = await tradeStarApi.post('/appointments', newAppointment);\n        console.log(res.data);\n        return res.data;\n    }catch(e) {\n        console.log(e);\n        if(e.response){\n            throw new Error(e.response.data);\n        } else {\n            throw new Error(\"Oops something went wrong\")\n        }\n    }\n\n }","import React, { useEffect, useState } from \"react\";\nimport {makeStyles } from \"@material-ui/core/styles\";\nimport { User } from \"../../../models/User\";\nimport {\n  Paper,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  TableContainer,\n} from \"@material-ui/core\";\nimport { Company } from \"../../../models/Company\";\nimport { getAllAppointmentsByCustomerId } from \"../../../remote/trade-stars/ts-appointments-functions\";\nimport { Appointment } from \"../../../models/Appointment\";\n\ninterface IViewAppointments {\n  updateCurrentUser: (u: User) => void;\n  currentUser: User;\n  currentCompany: Company;\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n    background: \"#fff2be\",\n  },\n  head: {    \n    \n    color: \"#fff2be\",\n  },\n  tableRow: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n});\n\nexport const ViewAppointments: React.FunctionComponent<IViewAppointments> = (\n  props\n) => {\n  const classes = useStyles();\n\n  const [upcomingAppts, changeUpcomingAppts] = useState<Appointment[]>();\n\n  useEffect(() => {\n    const getUpcomingAppts = async () => {\n      let appts = await getAllAppointmentsByCustomerId(\n        props.currentUser.userId\n      );\n      console.log(appts);\n      changeUpcomingAppts(appts);\n    };\n    getUpcomingAppts();\n  }, [props.currentUser.userId]);\n\n  return (\n    <>\n      <h2 className={classes.head}>Upcoming Appointments for {props.currentUser.firstName} {props.currentUser.lastName}</h2>\n      <div>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow >\n                <TableCell  className={classes.tableRow} align=\"center\">Appointment ID</TableCell>\n                {/* <TableCell align=\"left\">Customer Name</TableCell> */}\n                <TableCell className={classes.tableRow} align=\"center\">From</TableCell>\n                <TableCell  className={classes.tableRow} align=\"center\">To</TableCell>\n                <TableCell  className={classes.tableRow} align=\"center\">Service</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {upcomingAppts ? (\n                upcomingAppts.map((appt) => (\n                  <TableRow key={appt.appointmentId}>\n                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                      {appt.appointmentId}\n                    </TableCell>\n                    {/* <TableCell align=\"right\">\n                      {appt.customerId.username}\n                    </TableCell> */}\n                    <TableCell align=\"center\">{new Date(appt.appointmentStart).toLocaleString()}</TableCell>\n                    <TableCell align=\"center\">{new Date(appt.appointmentEnd).toLocaleString()}</TableCell>\n                    <TableCell align=\"center\">\n                      {appt.forService.serviceTypes.serviceType}\n                    </TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow key={1}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    Loading...\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { User } from '../../models/User';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    background: \"#fff2be\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n    fontWeight: 'bold'\n  },\n});\n\ninterface IProfileCardProps {\n    currentUser: User\n}\n\nexport const ProfileCard: React.FunctionComponent<IProfileCardProps> = (props) =>{\n  const classes = useStyles();\n  return (\n    <Card className={classes.root} >\n      <CardContent>\n        <Typography className={classes.pos} variant=\"h5\" component=\"h2\">\n          User Information\n        </Typography>\n        <AccountCircleIcon></AccountCircleIcon>\n        <Typography  align=\"left\" className={classes.pos} color=\"textPrimary\">\n          User Id: {props.currentUser && props.currentUser.userId}\n        </Typography>\n        <Typography align=\"left\" className={classes.pos} color=\"textPrimary\">\n          Username: {props.currentUser && props.currentUser.username}\n        </Typography>\n        <Typography align=\"left\" className={classes.pos} color=\"textPrimary\">\n          First Name: {props.currentUser && props.currentUser.firstName}\n        </Typography>\n        <Typography align=\"left\" className={classes.pos} color=\"textPrimary\">\n          Last Name: {props.currentUser && props.currentUser.lastName}\n        </Typography>\n        <Typography align=\"left\" className={classes.pos} color=\"textPrimary\">\n          Email : {props.currentUser && props.currentUser.email}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { User } from '../../models/User';\nimport { ProfileCard } from '../profile-card/ProfileCard';\n\ninterface ICustomerInfo {\n    updateCurrentUser: (u:User) => void\n    currentUser: User\n  }\n\nexport const CustomerInfo: React.FunctionComponent<ICustomerInfo> = (props) => {\n   \n    return (\n      <>\n      <div>\n      <ProfileCard currentUser={props.currentUser} />\n      </div>\n      </>\n    );\n  };","import React from 'react';\nimport { User } from '../../../models/User';\nimport { ProfileCard } from '../../profile-card/ProfileCard';\n\ninterface ITradesmanProfile {\n    updateCurrentUser: (u:User) => void\n    currentUser: User\n  }\nexport const TradesmanProfile: React.FunctionComponent<ITradesmanProfile> = (props) => {\n    \n    return (\n      <>\n      <div>\n            <ProfileCard currentUser={props.currentUser} />\n        </div>\n      \n \n      </>\n    );\n  };","import React, { useEffect, useState } from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport InfoIcon from '@material-ui/icons/Info';\nimport EventIcon from '@material-ui/icons/Event';\nimport { BrowserRouter as Router,Link, Route, Switch, useHistory } from \"react-router-dom\";\nimport { User } from '../../models/User';\n\n\ninterface ITradesmanDashboard {\n  updateCurrentUser: (u:User) => void\n  currentUser: User\n}\n\nexport const TradesmanDashboard: React.FunctionComponent<ITradesmanDashboard> = (props) => {\n    \n    return (\n      <>\n      <div>\n            <p>View app</p>\n        </div>\n      \n \n      </>\n    );\n  };","import { tradeStarApi } from '.';\n\nexport const getAllReviews = async () => {\n    try {\n        let res = await tradeStarApi.get('/reviews');\n        console.log(res.data);\n        return res.data;\n    }catch(e) {\n        console.log(e);\n        if(e.response){\n            throw new Error(e.response.data);\n        } else {\n            throw new Error(\"Unable to fetch all appointments\")\n        }\n    }\n}\n\nexport const getReviewsByCompanyId = async (companyId: number) => {\n    try {\n        let res = await tradeStarApi.get(`/reviews/${companyId}`);\n        console.log(res.data);\n        return res.data;\n    }catch(e) {\n        console.log(e);\n        if(e.response){\n            throw new Error(e.response.data);\n        } else {\n            throw new Error(\"Unable to fetch all appointments\")\n        }\n    }\n}\n\nexport const saveNewReview = async (reviewText: string, reviewedBy: number, reviewedFor: number) => {\n\n    let newReview = {\n        reviewText,\n        reviewedBy,\n        reviewedFor\n    }\n\n    try {\n        let res = await tradeStarApi.post(`/reviews`, newReview);\n        console.log(res.data);\n        return res.data;\n    }catch(e) {\n        console.log(e);\n        if(e.response){\n            throw new Error(e.response.data);\n        } else {\n            throw new Error(\"Unable to fetch all appointments\")\n        }\n    }\n}","import React, { useEffect, useState } from 'react';\nimport { Company } from '../../models/Company';\nimport { Review } from '../../models/Review';\nimport { User } from '../../models/User';\nimport {\n    Card,\n    CardContent,\n    Typography,\n} from \"@material-ui/core\";\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { getReviewsByCompanyId } from '../../remote/trade-stars/ts-reviews-functions';\nimport StarsIcon from '@material-ui/icons/Stars';\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        minWidth: 500,\n        minHeight: 70,\n        background: \"#fff2be\",  \n    },\n    head: {\n        color: \"#fff2be\",  \n    },\n    pos: {\n        fontSize: 22,  \n    },\n}\n));\n\n\ninterface ICustomerReadReviewsProps {\n    updateCurrentCompany: (c: Company) => void;\n    currentCompany: Company;\n    updateCurrentUser: (u: User) => void;\n    currentUser: User;\n\n}\n\n\nexport const CustomerReadReviews: React.FunctionComponent<ICustomerReadReviewsProps> = (props) => {\n\n\n    const [reviews, changeReviews] = useState<Review[]>();\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        const getReviews = async () => {\n            let revs = await getReviewsByCompanyId(props.currentCompany.companyId) \n            console.log(revs)\n            changeReviews(revs)\n        } \n        getReviews();\n    }, [])\n\n    return (\n        <>\n        \n         <h1 className={classes.head}> Reviews given by customers for <br></br>\n             {props.currentCompany.companyName}</h1> \n             {reviews ? reviews.map((rev) => (\n                 <div>\n             <Card className={classes.root}>\n            <CardContent>\n            <Typography align=\"left\" className={classes.pos} color=\"textPrimary\">\n            <StarsIcon></StarsIcon> &nbsp; &nbsp; {rev.reviewedBy.firstName} {rev.reviewedBy.lastName} reviewed  : \n        </Typography><hr></hr>\n        <Typography align=\"left\" className={classes.pos} color=\"textSecondary\">\n        \" {rev.reviewText} \" \n        </Typography>             \n            </CardContent>\n        </Card>\n        <br></br>\n        </div>\n        \n    )):[]}\n        </>\n    )\n\n    //let reviewDisplay = (reviews) ? reviews.map((rev) => {\n    //     return (\n    //         <>\n    //          <h1 className={classes.head}> Reviews given by customers for <br></br>\n    //              {props.currentCompany.companyName}</h1>\n    //         <Card className={classes.root}>\n    //             <CardContent>\n                  \n    //             <Typography align=\"left\"  className={classes.pos} color=\"textPrimary\">\n    //             <StarsIcon></StarsIcon> &nbsp; &nbsp; {rev.reviewedBy.firstName} {rev.reviewedBy.lastName} reviewed  :\n    //              </Typography> <hr></hr>\n    //             <Typography align=\"left\"  className={classes.pos} color=\"textSecondary\">\n    //             \" {rev.reviewText} \" \n    //              </Typography>     \n\n    //             </CardContent>\n    //         </Card>\n    //         <br></br>\n    //         </>\n    //     )\n\n    // })\n    // : []\n\n    // return (\n    //     <>\n    //     { reviewDisplay }\n    //     </>\n//     );\n }","import React from 'react';\nimport { User } from '../../../models/User';\nimport { Company } from '../../../models/Company';\nimport { CustomerReadReviews } from '../../reviews/CustomerReadReviews';\n\ninterface ITradesmanReviews {\n    updateCurrentUser: (u:User) => void\n    currentUser: User\n    updateCurrentCompany: (c:Company) => void\n    currentCompany: Company\n  }\n\nexport const TradesmanReviews: React.FunctionComponent<ITradesmanReviews> = (props) => {\n    \n    return (\n      <>\n        <CustomerReadReviews\n         updateCurrentCompany = {props.updateCurrentCompany}\n         currentUser = {props.currentUser}\n         updateCurrentUser =  {props.updateCurrentUser}\n         currentCompany = {props.currentCompany}\n         />\n      \n \n      </>\n    );\n  };","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { User } from \"../../../models/User\";\nimport {\n  TableContainer,\n  Paper,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Button,\n  ButtonGroup,\n} from \"@material-ui/core\";\nimport { Appointment } from \"../../../models/Appointment\";\nimport { Company } from \"../../../models/Company\";\nimport { getAllAppointmentsByCompanyId, updateAppointmentCompletedById } from \"../../../remote/trade-stars/ts-appointments-functions\";\n\ninterface IViewSchedule {\n  updateCurrentUser: (u: User) => void;\n  currentUser: User;\n  currentCompany: Company;\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n    background: \"#fff2be\",\n  },\n  head: {\n    color: \"#fff2be\",\n  },\n  tb: {\n    fontWeight:'bold',\n  },\n  button1: {\n    color: \"#FF0000\",\n    borderColor: \"#FF0000\",\n    hoverOver: \"#FF0000\",\n  },\n  button2: {\n    color: \"#228B22\",\n    \n    borderColor: \"#228B22\",\n  },\n});\n\nexport const ViewSchedule: React.FunctionComponent<IViewSchedule> = (props) => {\n  const classes = useStyles();\n\n  const [scheduledAppts, changeScheduleAppts] = useState<Appointment[]>();\n\n  useEffect(() => {\n    const getScheduleRows = async () => {\n      let appts = await getAllAppointmentsByCompanyId(props.currentCompany.companyId);\n      console.log(appts);\n      changeScheduleAppts(appts);\n    };\n    getScheduleRows();\n  }, [props.currentCompany.companyId]);\n\n  const markAsCompleted = async (appointment: Appointment) => {\n    console.log(\"need to make call to mark completed\")\n    let updatedAppt = await updateAppointmentCompletedById(appointment, true);\n  }\n\n  const markAsCancelled = async (appointment: Appointment) => {\n    console.log(\"need to make call to mark cancelled\")\n    let updatedAppt = await updateAppointmentCompletedById(appointment, false);\n  }\n\n  return (\n    <>\n      <h1 className={classes.head}>Your Schedule</h1>\n      <div>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell className={classes.tb} align=\"center\">Appointment ID</TableCell>\n                <TableCell className={classes.tb} align=\"center\">Customer Name</TableCell>\n                <TableCell className={classes.tb} align=\"center\">From</TableCell>\n                <TableCell  className={classes.tb} align=\"center\">To</TableCell>\n                <TableCell className={classes.tb} align=\"center\">Service Type</TableCell>\n                <TableCell className={classes.tb} align=\"center\">Completed</TableCell>\n                <TableCell  className={classes.tb} align=\"center\">Cancel/Mark As Completed</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {(scheduledAppts) ? (scheduledAppts.map((appt) => (\n                <TableRow key={appt.appointmentId}>\n                  <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                    {appt.appointmentId}\n                  </TableCell>\n                  <TableCell align=\"center\">{appt.customerId.username}</TableCell>\n                  <TableCell align=\"center\">{new Date(appt.appointmentStart).toLocaleString()}</TableCell>\n                  <TableCell align=\"center\">{new Date(appt.appointmentEnd).toLocaleString()}</TableCell>\n                  <TableCell align=\"center\">{appt.forService.serviceTypes.serviceType}</TableCell>\n                  <TableCell align=\"center\">\n                  {appt.appointmentCompleted === true\n                    ? \"Completed\"\n                    : \"not Completed\"}\n\n                </TableCell>                  <TableCell align=\"center\">\n                    <ButtonGroup\n                      color=\"primary\"\n                      aria-label=\"outlined primary button group\"\n                    >\n                      <Button className={classes.button1}\n                        onClick={() => {\n                          markAsCancelled(appt);\n                        }}\n                      >\n                        Cancel\n                      </Button>\n                      <Button className={classes.button2}\n                        onClick={() => {\n                          markAsCompleted(appt);\n                        }}\n                      >\n                        Complete\n                      </Button>\n                    </ButtonGroup>\n                  </TableCell>\n                </TableRow>\n              ))) : (\n                <TableRow key={1}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    Loading...\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </>\n  );\n};\n","import {tradeStarApi} from \".\"\nimport { Appointment } from \"../../models/Appointment\";\n\n\nexport const UpdateAppointments = async (appointment: Appointment ,isConfirmed: boolean) =>{\n\n    let updatedAppt = {\n        ...appointment,\n        appointmentConfirmed: isConfirmed\n    }\n    try {\n        let res = await tradeStarApi.put(`/appointments`, updatedAppt);\n        console.log(res.data);\n        return res.data;\n    }catch(e) {\n        console.log(e);\n        if(e.response){\n            throw new Error(e.response.data);\n        } else {\n            throw new Error(\"Oops something went wrong\")\n        }\n    }\n\n\n}\n\n\n","import React, { useEffect, useState } from 'react';\nimport { User } from '../../models/User';\nimport {\n  TableContainer,\n  Paper,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  ButtonGroup,\n  Button,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Appointment } from '../../models/Appointment';\nimport { getAllAppointmentsByCompanyId } from '../../remote/trade-stars/ts-appointments-functions';\nimport { Company } from '../../models/Company';\nimport { UpdateAppointments } from '../../remote/trade-stars/approve-appointment';\n\ninterface IApproveAppointments {\n  updateCurrentUser: (u:User) => void\n  currentUser: User\n  updateCurrentCompany: (u:Company) => void\n  currentCompany: Company\n  \n  \n}\n\nconst useStyles = makeStyles({\n  root: {\n      minWidth: 250,\n      background: \"#fff2be\",\n    },\n    text: {\n      fontWeight: 'bold',\n    },\n    col: {\n      color: \"#fff2be\",\n    },\n    button1: {\n      color: \"#FF0000\",\n      borderColor: \"#FF0000\",\n      hoverOver: \"#FF0000\",\n    },\n    button2: {\n      color: \"#228B22\",\n      \n      borderColor: \"#228B22\",\n    },\n});\n\n\nexport const ApproveAppointments: React.FunctionComponent<IApproveAppointments> = (props) => {\n  const classes = useStyles();\n\n  const [appointments, viewAppointments] = useState<Appointment[]>();\n\n  useEffect(() => {\n    const getAppointments = async () => {\n      let appoint = await getAllAppointmentsByCompanyId(props.currentCompany.companyId);\n      console.log(appoint);\n      viewAppointments(appoint);\n    };\n    getAppointments();\n  }, []);\n\n  const approveAppointments = async (appointment: Appointment) => {\n    try {\n      let user = await UpdateAppointments(appointment, true);\n      console.log(user)\n      const getAppointments = async () => {\n        let appoint = await getAllAppointmentsByCompanyId(props.currentCompany.companyId)\n        console.log(appoint);\n        viewAppointments(appoint);\n      };\n      getAppointments();\n      \n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n  const rejectAppointments = async (appointment: Appointment) => {\n    try {\n      let user = await UpdateAppointments(appointment, false);\n      console.log(user)\n      const getAppointments = async () => {\n        let appoint = await getAllAppointmentsByCompanyId(props.currentCompany.companyId);\n        console.log(appoint);\n        viewAppointments(appoint);\n      };\n      getAppointments();\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n    \n    return (\n      \n      <div>\n        <h1 className={classes.col}>View Appointments</h1>\n        <TableContainer component={Paper} className={classes.root}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n          <TableCell className={classes.text} align=\"center\" >Id</TableCell>\n            {/* <TableCell align=\"center\">AppointmentId</TableCell> */}\n            <TableCell className={classes.text} align=\"center\">Customer Name</TableCell>\n            <TableCell className={classes.text} align=\"center\">Company Name</TableCell>\n            <TableCell  className={classes.text} align=\"center\">Start Time</TableCell>\n            <TableCell  className={classes.text} align=\"center\">End Time</TableCell>\n            <TableCell  className={classes.text} align=\"center\">Service</TableCell>\n\n            <TableCell  className={classes.text} align=\"center\">Confirmation</TableCell>\n            \n            <TableCell  className={classes.text} align=\"center\">Reject/Approve</TableCell>\n          </TableRow>\n        </TableHead>\n       \n        <TableBody>\n        {appointments ? (\n            appointments.map((row) => (\n              <TableRow key={row.appointmentId}>\n                <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                  {row.appointmentId}\n                </TableCell>\n                <TableCell align=\"center\">{row.customerId.username}</TableCell>\n                <TableCell align=\"center\">{row.companyId.companyName}</TableCell>\n                <TableCell align=\"center\">\n                  {new Date(row.appointmentStart).toLocaleString()}\n                </TableCell>\n                <TableCell align=\"center\">{new Date(row.appointmentEnd).toLocaleString()}</TableCell>\n                <TableCell align=\"center\">{row.forService.serviceTypes.serviceType}</TableCell>\n\n                \n                <TableCell align=\"center\">\n                  {row.appointmentConfirmed === true\n                    ? \"Approved\"\n                    : \"rejected\"}\n\n                </TableCell>\n\n                <TableCell align=\"center\">\n                  <ButtonGroup\n                    color=\"primary\"\n                    aria-label=\"outlined primary button group\"\n                  >\n                    <Button className={classes.button1} onClick={() => {rejectAppointments(row)}}>Reject</Button>\n                    <Button className={classes.button2} onClick={() => {approveAppointments(row)}}>Approve</Button>\n                  </ButtonGroup>\n                </TableCell>\n              </TableRow>\n            ))\n          ) : (\n            <TableRow key={1}>\n              <TableCell component=\"th\" scope=\"row\">\n                Loading...\n              </TableCell>\n            </TableRow>\n          )}\n            \n\n            </TableBody>\n        </Table>\n        </TableContainer>\n       \n        </div>\n      \n \n      \n    );\n  };","import {tradeStarApi} from '.';\n\nexport const getAllTradeServices = async () => {\n    try {\n        let res = await tradeStarApi.get('/offerings');\n        console.log(res.data);\n        return res.data;\n    }catch(e) {\n        console.log(e);\n        if(e.response){\n            throw new Error(e.response.data);\n        } else {\n            throw new Error(\"Oops something went wrong\")\n        }\n    }\n}\n\nexport const getAllServicesTypes = async () => {\n    try {\n        let res = await tradeStarApi.get('/offerings/types');\n        console.log(res.data);\n        return res.data;\n    }catch(e) {\n        console.log(e);\n        if(e.response){\n            throw new Error(e.response.data);\n        } else {\n            throw new Error(\"Oops something went wrong\")\n        }\n    }\n}","import { Button, makeStyles, CardActionArea, CardActions, CardContent, Typography, Grid } from '@material-ui/core';\nimport Card from '@material-ui/core/Card/Card';\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\nimport { Company } from '../../../models/Company';\nimport { Service } from '../../../models/Service';\nimport { User } from '../../../models/User';\nimport { getAllServicesTypes, getAllTradeServices } from '../../../remote/trade-stars/ts-services-functions';\nimport RateReviewIcon from '@material-ui/icons/RateReview';\nimport BuildRoundedIcon from '@material-ui/icons/BuildRounded';\nimport { createStyles, Theme } from '@material-ui/core/styles';\nimport { ServiceTypes } from '../../../models/ServiceTypes';\nimport EventIcon from \"@material-ui/icons/Event\";\nimport ViewListIcon from '@material-ui/icons/ViewList';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    root: {\n      maxWidth: 950,\n      background: \"#fff2be\",\n    },\n    text: {\n      color: \"#fff2be\",\n    },\n  })\n);\n\ninterface ICustomerDashboard {\n    updateCurrentUser: (u:User) => void\n    currentUser: User\n    updateCurrentCompany: (c: Company) => void;\n    currentCompany: Company;\n    updateCurrentService: (s: Service) => void;\n    currentService: Service\n  }\n  \nexport const CustomerDashboard: React.FunctionComponent<ICustomerDashboard> = (props) => {\n  const classes = useStyles();\n  const [viewServices, changeViewServices] = useState<Service[]>();\n  const [serviceTypes, changeServiceTypes] = useState<ServiceTypes[]>([]);\n\n  useEffect(() => {\n    const getServiceRows = async () => {\n      let serv = await getAllTradeServices();\n      changeViewServices(serv);\n    };\n    const getServiceTypes = async () => {\n      let servTypes = await getAllServicesTypes();\n      changeServiceTypes(servTypes);\n    };\n\n    getServiceTypes();\n    getServiceRows();\n  }, []);\n\n  let history = useHistory();\n  function AddReview(company: Company) {\n    props.updateCurrentCompany(company);\n    history.push(`/dashboard/CreateReview`);\n  }\n  function ViewReview(company: Company) {\n    props.updateCurrentCompany(company);\n    history.push(`/dashboard/TradesmanReviews`);\n  }\n  function BookAppointment(service: Service) {\n    props.updateCurrentCompany(service.providedBy);\n    props.updateCurrentService(service);\n    history.push(`/dashboard/BookAppointment`);\n  }\n    return (\n      <>\n      <h1 className={classes.text} >Services</h1>\n        \n        <div>\n        {(viewServices) ? (viewServices.map((serv) => (\n          <div>\n      <Card className={classes.root} key={serv.serviceId} >\n\n\n      <CardActionArea >\n      \n        <CardContent >\n          <div style={{backgroundColor: '#000000',borderRadius:25}}  >\n          <Typography className={classes.text} gutterBottom variant=\"h4\" component=\"h2\"  align='left' >\n          &nbsp; <BuildRoundedIcon color=\"secondary\" />&nbsp; {serv.providedBy.companyName}\n          </Typography>\n          </div>\n          <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              \n              spacing={0}\n            >\n                <Typography  variant=\"h6\" component=\"p\" align='left'>\n                Owner of the company :  {serv.providedBy.companyOwner.firstName}\n                </Typography>\n                <Typography variant=\"h6\"  component=\"p\" align='left'>\n                &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                &nbsp; &nbsp; &nbsp; &nbsp;\n                \n                 Contact Details : \n                </Typography>\n                </Grid>\n                <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              \n              spacing={0}\n            >\n              <Typography variant=\"body2\"  component=\"p\" align='left'>\n                 Types of services they provide :  {serv.serviceTypes.serviceType}<br></br>\n                </Typography>\n                &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;\n                &nbsp; &nbsp; \n                \n                <Typography variant=\"body2\" component=\"p\" align='left'>\n                Email :  {serv.providedBy.companyOwner.email}\n                \n                </Typography>\n                </Grid>\n                <Typography variant=\"body2\"  component=\"p\" align='left'>\n                 Average price for the service : ${serv.servicePrice}\n                </Typography>  \n                \n               \n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n            \n              <Button style={{\n              borderRadius: 25,\n              backgroundColor: \"#000000\",\n              padding: \"13px 26px\",\n              fontSize: \"14px\"\n          }} className={classes.text}\n          variant=\"contained\" onClick={() => {BookAppointment(serv); }} >\n                 <EventIcon />&nbsp; Book an Appointment\n              </Button>\n              \n              <Button style={{\n              borderRadius: 25,\n              backgroundColor: \"#000000\",\n              padding: \"13px 26px\",\n              fontSize: \"14px\"\n          }} className={classes.text}\n          variant=\"contained\" onClick={() => {ViewReview(serv.providedBy); }}>\n               <ViewListIcon/> &nbsp;  View Reviews\n              </Button>\n              <Button style={{\n              borderRadius: 25,\n              backgroundColor: \"#000000\",\n              padding: \"13px 26px\",\n              fontSize: \"14px\"\n          }} className={classes.text}\n          variant=\"contained\" onClick={() => {AddReview(serv.providedBy); }}>\n                <RateReviewIcon /> &nbsp; Give a review\n              </Button>\n              </CardActions>\n              \n              </Card>\n              <br></br>\n              </div>\n              ))) : (\n          <Card className={classes.root} key={1}> \n            <CardActionArea>\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Loading...\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Loading..\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\">\n                Share\n              </Button>\n              <Button size=\"small\" color=\"primary\">\n                Learn More\n              </Button>\n            </CardActions>\n          </Card>\n        )}\n      </div>\n    </>\n  );\n};\n","import {tradeStarApi} from \".\";\nimport { Company } from \"../../models/Company\";\nimport { User } from \"../../models/User\";\n\nexport const createNewReview = async (reviewText:string, reviewedBy:User, reviewedFor:Company) =>{\n\n    let newReview = {\n        reviewText,\n        reviewedBy,\n        reviewedFor,\n    }\n\n    console.log(newReview)\n    try{\n\n        let res = await tradeStarApi.post('/reviews', newReview);\n        console.log(res.data);\n        return res.data;\n    }catch(e) {\n        console.log(e);\n        if(e.response){\n            throw new Error(e.response.data);\n        } else {\n            throw new Error(\"Oops something went wrong\")\n        }\n    }\n\n }","import React, { useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport  Button  from '@material-ui/core/Button';\nimport {  Card } from '@material-ui/core';\nimport { User } from '../../models/User';\nimport { Company } from '../../models/Company';\nimport { createNewReview } from '../../remote/trade-stars/create-review-functions';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '70ch',\n        background: \"#fff2be\", \n      },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 50,\n        width: '25%', \n        display: 'flex',\n        //flexDirection: 'column',\n        alignItems: 'left',\n        background: \"#fff2be\", \n      },\n      col: {\n        color: \"#fff2be\", \n      },\n      bg: {\n        backgroud: \"#fff2be\", \n      },\n  }),\n);\n\ninterface ICreateReview {\n  updateCurrentUser: (u:User) => void\n  currentUser: User\n  updateCurrentCompany: (c:Company) => void\n  currentCompany: Company\n}\n\nexport const CreateReview: React.FunctionComponent<ICreateReview> = (props) =>  {\n\n  const classes = useStyles();\n  const [review, changeReview] = useState(\"Please enter your review over here!!\");\n  const [reviewedBy] = useState(props.currentUser);\n  const [reviewedFor] = useState(props.currentCompany);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeReview(event.target.value);\n  };\n\n  const handleSubmitCreateReview = async (e: React.SyntheticEvent) => {\n\n    e.preventDefault();\n\n    try {\n      // Submit new review to database\n       let CreateReview = await createNewReview(\n        review,\n        reviewedBy,\n        reviewedFor,\n       );\n\n\n       console.log(CreateReview);\n       alert(\"Review has been created\")\n   } catch (e) {\n       console.log(e.message);\n   }\n\n  };\n\n  return (\n    <>\n        \n    <h1 className={classes.col}> Enter Review for {props.currentCompany.companyName}</h1>\n    <form onSubmit = {handleSubmitCreateReview} className={classes.root} noValidate autoComplete=\"off\">\n    <div className={classes.bg}>\n      <Card className={classes.root}>\n      \n        <TextField\n          value = {review}  \n          onChange = {handleChange}\n          id=\"outlined-multiline-static\"\n          label=\"Review\"\n          multiline\n          rows={10}\n          variant=\"outlined\"\n        />\n      <br></br>\n        <Button\n            type=\"submit\"\n            \n            variant=\"contained\"\n            color=\"primary\"\n              \n        >       \n        Submit\n        </Button>\n        <br></br><br></br>\n        </Card>\n        </div>\n    </form>\n    </>\n  );\n}","import {tradeStarApi} from '.';\n\nexport const getCompanyByOwnerId = async (companyOwner: number) => {\n    try {\n        console.log(companyOwner)\n        let res = await tradeStarApi.get(`/companies/${companyOwner}`);\n        console.log(res.data);\n        return res.data;\n    }catch(e) {\n        console.log(e);\n        if(e.response){\n            throw new Error(e.response.data);\n        } else {\n            throw new Error(\"Unable to fetch all appointments\")\n        }\n    }\n}\n\n\nexport const serviceDisplay = async (serviceId:number, companyName:string, companyOwner: string, password:string, servicePrice: number,companyType:string,serviceTypes:string,\n    providedBy:number) =>{\n\n    // let newService = {\n    //     companyId:number\n    //     serviceId:number\n    //     companyName:string\n    //     companyOwner: string\n    //     servicePrice: number\n    //     companyType:string\n    //     serviceTypes:string\n    //     providedBy:number\n    // }\n\n    // console.log(newService)\n    // try{\n\n    //     let res = await tradeStarApi.post('/services', newService);\n    //     console.log(res.data);\n    //     return res.data;\n    // }catch(e) {\n    //     console.log(e);\n    //     if(e.response){\n    //         throw new Error(e.response.data);\n    //     } else {\n    //         throw new Error(\"Oops something went wrong\")\n    //     }\n    // }\n\n }","import React, {  useState } from 'react';\nimport { Company } from '../../models/Company';\nimport { User } from '../../models/User';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { Service } from '../../models/Service';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { createAppointment } from '../../remote/trade-stars/ts-appointments-functions';\nimport { useHistory } from 'react-router-dom';\nimport { Card , Grid} from '@material-ui/core';\n\ninterface IBookAppointmentProps {\n    updateCurrentCompany: (c: Company) => void;\n    currentCompany: Company;\n    updateCurrentUser: (u: User) => void;\n    currentUser: User;\n    updateCurrentService: (s: Service) => void;\n    currentService: Service\n\n}\n\n\n\nconst linkStyle = {\n    color: 'white',\n    fontSize: 16,\n\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        minWidth: 250,\n        background: \"#fff2be\",\n      },\n      textField: {\n        width: 200,\n        height: 150,\n      },\n      head: {\n        color: \"#fff2be\",\n      },\n}),\n);\n\nexport const BookAppointment: React.FunctionComponent<IBookAppointmentProps> = (props) => {\n\n    const classes = useStyles();\n\n    let history = useHistory();\n     \n    const [pickedDate, changePickedDate] = useState(new Date());\n    // const [appointment_for, changeAppointment_for] = useState(0);\n\n    const [appointmentFor] = useState(props.currentUser.userId);\n    const [appointmentCompany] = useState(props.currentCompany);\n    const handlePickedDateChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        changePickedDate(event.target.value as Date);\n      };\n    \n    const handleSubmitAppointment = async (e: React.SyntheticEvent) => {\n        \n        e.preventDefault();\n       // const appointmentForServices = props.currentService.serviceTypes\n        var DOpickedEndDate = new Date(pickedDate);\n        DOpickedEndDate.setHours(DOpickedEndDate.getHours(),DOpickedEndDate.getMinutes()+60,0,0);\n        \n        var DOpickedDate = new Date(pickedDate)\n\n\n        try {\n            //Submit appointment to db\n            let appointment = await createAppointment(props.currentUser, props.currentCompany, DOpickedDate, DOpickedEndDate, props.currentService )  \n            console.log(appointment);\n            history.push('/dashboard')\n\n\n        } catch(e) {\n          console.log(e);\n        }\n\n    };\n    return (\n        <>\n        <h1 className={classes.head}>Book an Appointment for <br></br>\n        {props.currentCompany.companyName}</h1>\n        <Card className={classes.root}>\n        <Grid\n              container\n              direction=\"column\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n              \n            >\n        <form onSubmit = {handleSubmitAppointment}  noValidate>\n       <br></br>\n        <TextField\n          id=\"datetime-local\"\n          label=\"Next appointment\"\n          type=\"datetime-local\"\n          value = {pickedDate}\n          onChange = {handlePickedDateChange}\n          defaultValue=\"2017-05-24T10:30\"\n          \n          InputLabelProps={{\n            shrink: true,\n          }}\n        /> \n        <br></br><br></br>\n        <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Register\n        </Button>\n          <br></br><br></br>\n      </form>\n      </Grid>\n      </Card>\n</>\n\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useHistory,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { ViewAppointments } from \"../customer/view-app/ViewAppointments\"\nimport { CustomerInfo } from \"../customer/CustomerInfo\";\nimport { TradesmanProfile } from \"../tradesman/profile/TradesmanProfile\";\nimport { TradesmanDashboard } from \"../tradesman/TradesmanDashboard\";\nimport { TradesmanReviews } from \"../tradesman/reviews/TradesmanReviews\";\nimport { ViewSchedule } from \"../tradesman/schedule/ViewSchedule\";\nimport { User } from \"../../models/User\";\nimport RateReviewIcon from \"@material-ui/icons/RateReview\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { ApproveAppointments } from \"../approvereject/ApproveAppointments\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\nimport { CustomerDashboard } from \"../customer/customer-dashboard/CustomerDashboard\";\nimport { CreateReview } from \"../reviews/CreateReview\";\nimport { Company } from \"../../models/Company\";\nimport { getCompanyByOwnerId } from \"../../remote/trade-stars/ts-companies-functions\";\nimport { BookAppointment } from \"../book-appointment/BookAppointment\";\nimport { Service } from \"../../models/Service\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      background: 'black'\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerContainer: {\n      overflow: \"auto\",\n      background: '#e0a150',\n      minHeight: '89.7%',\n      fontWeight: 'bold'\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    starIcon: {\n      marginRight: 5,\n      maxHeight: 30,\n      maxWidth: 50\n    },\n    infoIcon: {\n      color: '#0045ff'\n    },\n    scheduleIcon: {\n      color: '#0045ff'\n    },\n    businessIcon: {\n      color: '#0045ff'\n    },\n    headerText: {\n      color: \"#e0a150\",\n      fontWeight: 'bold'\n    },\n    listText: {\n      fontWeight: 'bold'\n    }\n  })\n);\ninterface IClippedDrawerProps {\n  updateCurrentUser: (u: User) => void;\n  currentUser: User;\n  updateCurrentCompany: (c: Company) => void;\n  currentCompany: Company;\n  // new changes might need fixing\n  // updateCurrentService: (s: Service) => void;\n  // currentService: Service;\n\n}\n\nexport const ClippedDrawer: React.FunctionComponent<IClippedDrawerProps> = (\n  props\n) => {\n\n  const [company, changeCompany] = useState<Company>(undefined);\n  const [service, changeService] = useState<Service>(undefined);\n\n  useEffect(() => {\n    if(props.currentUser.userRole.roleId === 2){\n      //if the user is a tradesman we need to get their company info\n      const getCompany = async () => {\n        let associatedCompany = await getCompanyByOwnerId(props.currentUser.userId);\n        changeCompany(associatedCompany);\n        console.log(associatedCompany);\n        \n      }\n      getCompany();\n    }\n  },[])\n\n  const classes = useStyles();\n  let {path, url} = useRouteMatch();\n  let history = useHistory();\n\n  function NavigateLink(index: number) {\n    if (index === 0) {\n      history.push(`${path}/CustomerInfo`);\n    } else if (index === 1) {\n      history.push(`${path}/ViewAppointments`);\n    } else if (index === 2) {\n      history.push(`${path}/CustomerDashboard`);\n    } else {\n      history.push(\"/\");\n    }\n  }\n\n  function TradesmanNavigateLink(index: number) {\n    if (index === 0) {\n      history.push(`${path}/TradesmanProfile`);\n    } else if (index === 1) {\n      history.push(`${path}/TradesmanReviews`);\n    } else if (index === 2) {\n      history.push(`${path}/ApproveAppointments`);\n    } else if (index === 3) {\n      history.push(`${path}/ViewSchedule`);\n    } else if (index === 4) {\n      history.push(\"/\");\n    } else {\n      history.push(\"/dashboard\");\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <img src={process.env.PUBLIC_URL + '/TS.png'} alt=\"logo\"  className={classes.starIcon}/>\n          <Typography className={classes.headerText} variant=\"h6\" noWrap>\n             Trade Stars\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n          {(props.currentUser && props.currentUser.userRole.roleId === 1) ? (\n            <List>\n              {[\"My Info\", \"View Upcoming Appointments\",\"View Services\", \"Logout\"].map(\n                (text, index) => (\n                  <ListItem\n                    button\n                    key={text}\n                    onClick={() => {\n                      NavigateLink(index);\n                    }}\n                  >\n                    <ListItemIcon>\n                      {index === 0 ? (\n                        <InfoIcon className={classes.infoIcon}/>\n                      ) : index === 1 ? (\n                        <ScheduleIcon className={classes.scheduleIcon}/>\n                      ) : index === 2 ? (\n                        <BusinessCenterIcon className={classes.businessIcon}/>\n                      ) : (\n                        <ExitToAppIcon color=\"secondary\"/>\n                      )}\n                    </ListItemIcon>\n                    <ListItemText primary={text} />\n                  </ListItem>\n                )\n              )}\n            </List>\n          ) : ((props.currentUser && props.currentUser.userRole.roleId === 2) ? \n            <List>\n              {[\n                \"My Profile\",\n                \"Tradesman Reviews\",\n                \"Approve/Reject Apppointments\",\n                \"View Schedule\",\n                \"Logout\",\n              ].map((text, index) => (\n                <ListItem\n                  button\n                  key={text}\n                  onClick={() => {\n                    TradesmanNavigateLink(index);\n                  }}\n                >\n                  <ListItemIcon>\n                    {index === 0 ? (\n                      <AccountCircleIcon className={classes.infoIcon}/>\n                    ) : index === 1 ? (\n                      <RateReviewIcon className={classes.infoIcon}/>\n                    ) : index === 2 ? (\n                      <ScheduleIcon className={classes.infoIcon}/>\n                    ) : index === 3 ? (\n                      <EventIcon className={classes.infoIcon}/>\n                    ) : (\n                      <ExitToAppIcon color=\"secondary\"/>\n                    )}\n                  </ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              ))}\n            </List> : <div>Please login</div>\n          )}\n          <Divider />\n        </div>\n      </Drawer>\n      <main className={classes.content}>\n        <Toolbar />\n        <Switch>\n          <Route path={`${path}/CustomerInfo`}>\n            <CustomerInfo\n              updateCurrentUser={props.updateCurrentUser}\n              currentUser={props.currentUser}\n              \n            />\n          </Route>\n          <Route path={`${path}/ViewAppointments`}>\n            <ViewAppointments\n              updateCurrentUser={props.updateCurrentUser}\n              currentUser={props.currentUser}\n              currentCompany={company}\n            />\n          </Route>\n          <Route path={`${path}/TradesmanProfile`}>\n            <TradesmanProfile\n              updateCurrentUser={props.updateCurrentUser}\n              currentUser={props.currentUser}\n            />\n          </Route>\n          <Route path={`${path}/ApproveAppointments`}>\n            <ApproveAppointments\n              updateCurrentUser={props.updateCurrentUser}\n              currentUser={props.currentUser}\n              updateCurrentCompany={changeCompany}\n              currentCompany={company}\n\n            />\n          </Route>\n          <Route path={`${path}/TradesmanDashboard`}>\n            <TradesmanDashboard\n              updateCurrentUser={props.updateCurrentUser}\n              currentUser={props.currentUser}\n            />\n          </Route>\n          <Route path={`${path}/TradesmanReviews`}>\n            <TradesmanReviews\n              updateCurrentUser={props.updateCurrentUser}\n              currentUser={props.currentUser}\n              updateCurrentCompany = {props.updateCurrentCompany}\n              currentCompany = {company}\n            />\n          </Route>\n          <Route path={`${path}/BookAppointment`}>\n            <BookAppointment\n              updateCurrentUser={props.updateCurrentUser}\n              currentUser={props.currentUser}\n              updateCurrentCompany = {props.updateCurrentCompany}\n              currentCompany = {company}\n\n              updateCurrentService = {changeService}\n              currentService = {service}\n            />\n          </Route>\n          <Route path={`${path}/ViewSchedule`}>\n            <ViewSchedule\n              updateCurrentUser={props.updateCurrentUser}\n              currentUser={props.currentUser}\n              currentCompany={company}\n            />\n          </Route>\n          <Route path={`${path}/CustomerDashboard`}>\n            <CustomerDashboard\n              updateCurrentUser={props.updateCurrentUser}\n              currentUser={props.currentUser}\n              updateCurrentCompany = {changeCompany}\n              currentCompany = {company}\n              updateCurrentService = {changeService}\n              currentService = {service}\n            />\n          </Route>\n          <Route path={`${path}/CreateReview`}>\n            <CreateReview\n              updateCurrentUser={props.updateCurrentUser}\n              currentUser={props.currentUser}\n              updateCurrentCompany = {props.updateCurrentCompany}\n              currentCompany = {company}\n            />\n            </Route>\n            \n        </Switch>\n      </main>\n    </div>\n  );\n  \n};","import {tradeStarApi} from \".\"\n\nexport const tsLogin = async (username: string, password: string) => {\n    let credentials = {\n        username,\n        password\n    }\n\n    try {\n        let res = await tradeStarApi.post('/auth', credentials);\n        console.log(res.data);\n        return res.data;\n    }catch(e) {\n        console.log(e);\n        if(e.response){\n            throw new Error(e.response.data);\n        } else {\n            throw new Error(\"Oops something went wrong\")\n        }\n    }\n}\n\nexport const createNewCustomer = async (firstName:string, lastName:string, username:string, password:string, email:string) =>{\n\n    let newCustomer = {\n            firstName,\n            lastName,\n            username,\n            password,\n            email,\n            userRole: {\n                roleId: 1\n            }\n    }\n\n    console.log(newCustomer)\n    try{\n\n        let res = await tradeStarApi.post('/users', newCustomer);\n        console.log(res.data);\n        return res.data;\n    }catch(e) {\n        console.log(e);\n        if(e.response){\n            throw new Error(e.response.data);\n        } else {\n            throw new Error(\"Oops something went wrong\")\n        }\n    }\n\n }\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  makeStyles,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { tsLogin } from \"../../remote/trade-stars/trade-stars-functions\";\nimport { User } from \"../../models/User\";\nimport { useHistory } from \"react-router\";\n\ninterface ILoginProps {\n  updateCurrentUser: (u: User) => void;\n  currentUser: User;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    background: \"#e0a150\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  mainLogo: {\n    height: 200,\n    width:200,\n    borderRadius: 100\n  },\n  logoDiv: {\n    marginBottom: 130,\n    marginTop: 0\n  }\n});\n\nexport const LoginForm: React.FunctionComponent<ILoginProps> = (props) => {\n  const classes = useStyles();\n\n  const [username, changeUsername] = useState(\"\");\n  const [password, changePassword] = useState(\"\");\n\n  let history = useHistory();\n\n  const handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    changeUsername(e.target.value);\n  };\n\n  // This will handle the password change and update state\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    changePassword(e.target.value);\n  };\n\n  // Synthetic event is from react for creating a standard event between different browsers\n  const handleSubmitLogin = async (e: React.SyntheticEvent) => {\n    // Prevent default html submit behaviour\n    e.preventDefault();\n    // Send username and password along with token\n    try {\n      let user = await tsLogin(username, password);\n      props.updateCurrentUser(user);\n      console.log(user);\n      if (user) {\n        // navigate based on if user is returned\n        history.push(\"/dashboard\");\n      }\n    } catch (e) {\n      changePassword(\"\");\n    }\n  };\n\n  return (\n    <>\n      <div className={classes.logoDiv}>\n        <img\n          src={process.env.PUBLIC_URL + \"/logo2.png\"}\n          alt=\"logo\"\n          className={classes.mainLogo}\n        />\n      </div>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography className={classes.pos} variant=\"h5\" component=\"h2\">\n            Login\n          </Typography>\n          <form onSubmit={handleSubmitLogin} noValidate autoComplete=\"off\">\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n              spacing={2}\n            >\n              <Grid item>\n                <TextField\n                  value={username}\n                  onChange={handleUsernameChange}\n                  id=\"username-input\"\n                  type=\"text\"\n                  label=\"Username\"\n                  variant=\"outlined\"\n                  autoComplete=\"off\"\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  value={password}\n                  onChange={handlePasswordChange}\n                  id=\"password-input\"\n                  type=\"password\"\n                  label=\"Password\"\n                  variant=\"outlined\"\n                  autoComplete=\"off\"\n                />\n              </Grid>\n              <Grid item>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                  Submit\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n","import { Card, CardContent, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    background: '#e0a150',\n    marginTop: -30\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  mainLogo: {\n    height: 200,\n    width:200,\n    borderRadius: 100\n  },\n  logoDiv: {\n    marginBottom: 130,\n    marginTop: 0\n  }\n});\n\nexport const LandingPage: React.FunctionComponent<any> = (props) => {\n  const classes = useStyles();\n\n  let history = useHistory();\n\n  const navToLogin = () => {\n    history.push(\"/login\");\n  };\n  const navToTradesmenRegister = () => {\n    history.push(\"/tradesmenregister\");\n  };\n\n  const navToCustomerRegister = () => {\n    history.push(\"/customerregister\");\n  };\n\n  return (\n    <>\n    <div className={classes.logoDiv}>\n      <img src={process.env.PUBLIC_URL + '/logo2.png'} alt=\"logo\"  className={classes.mainLogo}/>\n    </div>\n    <div>\n      <Card className={classes.root }>\n        <CardContent>\n          <Typography className={classes.pos} variant=\"h4\" component=\"h1\">\n            Welcome to Tradestars!\n          </Typography>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            <Grid item>\n              <Button variant=\"contained\" color=\"primary\" onClick={navToLogin}>\n                Login\n              </Button>\n            </Grid>\n\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={navToCustomerRegister}\n              >\n                Register As Customer\n              </Button>\n            </Grid>\n            <Grid item>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={navToTradesmenRegister}\n              >\n                Register As Tradesmen\n              </Button>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </div>\n    </>\n  );\n};\n","import Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport React, { useState } from \"react\";\nimport { createNewCustomer } from '../remote/trade-stars/trade-stars-functions';\nimport{useHistory} from 'react-router-dom'\nimport { User } from '../models/User';\nimport { Card } from '@material-ui/core';\n\ninterface ICustomerRegisterProps {\n  updateCurrentUser: (u: User) => void;\n  currentUser: User;\n}\n\n\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    maxHeight: 575,\n    background: \"#e0a150\",\n    \n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  hd:{\n    fontWeight: 'bold'\n  }\n}));\n\nexport const  Register: React.FunctionComponent<ICustomerRegisterProps> = (props) => {\n  const classes = useStyles();\n  let history = useHistory();\n\n\n  const [firstName, changeFirstName] = useState(\"\");\n  const [lastName, changeLastName] = useState(\"\");\n  const [username, changeUsername] = useState(\"\");\n  const [password, changePassword] = useState(\"\");\n  const [email, changeEmail] = useState(\"\");\n\n  const handleFirstNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    changeFirstName(e.target.value);\n  };\n\n  const handleLastNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    changeLastName(e.target.value);\n  };\n  const handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    changeUsername(e.target.value);\n  };\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    changePassword(e.target.value);\n  };\n\n  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    changeEmail(e.target.value);\n\n  };\n    // Synthetic event is from react for creating a standard event between different browsers\n    const handleSubmitCustomer =  async (e: React.SyntheticEvent) => {\n\n      // Prevent default html submit behaviour\n       e.preventDefault();\n      try{\n       //Submit new customer to database\n       let customer =  await createNewCustomer(\n        firstName,\n        lastName,\n        username,\n        password,\n        email\n       );\n       props.updateCurrentUser(customer);\n          if(customer){\n            history.push(\"/dashboard\");\n          }\n       }catch  (e) {\n        console.log(e.message);\n      }\n\n    };\n\n  return (\n    <Card className={classes.root}>\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n    \n        </Avatar>\n        <Typography className={classes.hd} component=\"h1\" variant=\"h6\">\n          Customer Registration\n        </Typography>\n      <br></br>\n        <form onSubmit={handleSubmitCustomer} noValidate autoComplete=\"off\">\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                value = {firstName}\n                onChange={handleFirstNameChange}\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                value = {lastName}\n                onChange={handleLastNameChange}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                value = {username}\n                onChange={handleUsernameChange}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"Username\"\n                label=\"User Name\"\n                name=\"UserName\"\n                autoComplete=\"Username\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                value = {password}\n                onChange={handlePasswordChange}\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                value = {email}\n                onChange={handleEmailChange}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n          </Grid>\n          <br></br>\n          <Button\n            \n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Register\n          </Button>\n         \n        </form>\n      </div>\n      <Box mt={3}>\n        \n      </Box>\n    </Container>\n    </Card>\n  );\n}\n","import {tradeStarApi} from \".\"\nimport { Company } from \"../../models/Company\";\nimport { ServiceTypes } from \"../../models/ServiceTypes\";\n\nexport const createNewService = async (servicePrice: any,serviceTypes: any, providedBy: Company) =>{\n\n    let newService = {\n        servicePrice,\n        serviceTypes: {\n                    serviceId: serviceTypes\n        },\n        providedBy\n    }\n\n    console.log(newService)\n    try{\n\n        let res = await tradeStarApi.post('/offerings', newService);\n        console.log(res.data);\n        return res.data;\n    }catch(e) {\n        console.log(e);\n        if(e.response){\n            throw new Error(e.response.data);\n        } else {\n            throw new Error(\"Oops something went wrong\")\n        }\n    }\n\n }","\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nimport {\n    Card,\n    CardContent,\n  } from \"@material-ui/core\";\n\nimport Container from '@material-ui/core/Container';\nimport React, { useState } from \"react\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\n\nimport{useHistory} from 'react-router-dom'\n\nimport { User } from '../../models/User';\nimport { Company } from '../../models/Company';\nimport { createNewService } from '../../remote/trade-stars/create-service';\n\n\ninterface ITradesmenCompanyRegisterProps {\n    updateCurrentCompany: (c: Company) => void;\n    currentCompany: Company;\n    updateCurrentUser: (u: User) => void;\n    currentUser: User;\n  }\n\nconst linkStyle = {\n    color: 'white',\n    fontSize: 16,\n\n    \n    \n    \n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        minWidth: 275,\n        background: '#e0a150',\n        maxHeight: 500,\n      },\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 380,\n        width: '100%', \n        display: 'flex',\n        //flexDirection: 'column',\n        alignItems: 'left',\n\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    head: {\n      fontWeight: 'bold'\n  },\n    \n}),\n);\n  \n  export const ServiceRegister:React.FunctionComponent<ITradesmenCompanyRegisterProps> = (props) => {\n\n    let history = useHistory();\n    const classes = useStyles();\n\n    const [servicePrice, changeServicePrice] = useState(\"\");\n    const [serviceType, changeServiceType] = useState(\"\");\n    const [providedBy, changeCompanyOwner] = useState(props.currentCompany);\n\n\n    const handleServicePrice = (e: React.ChangeEvent<HTMLInputElement>) => {\n        changeServicePrice(e.target.value);\n    };\n\n    const handleServiceTypeChange = (\n        e: any\n      ) => {\n        changeServiceType(e.target.value);\n      };\n\n\n\n\n\n\n    function clickHandler() {\n        console.log('Button was clicked');\n    }\n\n\n    // Synthetic event is from react for creating a standard event between different browsers\n    const handleService = async (e: React.SyntheticEvent) => {\n\n        // Prevent default html submit behaviour\n        e.preventDefault();\n        \n        try {\n           // Submit new company to database\n            let company = await createNewService(\n                servicePrice,\n                serviceType,\n                providedBy\n );\n\n            if (company) {\n                props.updateCurrentCompany(company)\n                history.push('/dashboard');\n            }\n\n            console.log(\"company\");\n        } catch (e) {\n            console.log(e.message);\n        }\n\n\n\n    };\n\n    return (\n    <Card className={classes.root}>\n        <CardContent>\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n\n                </Avatar><br></br>\n                <Typography className={classes.head} component=\"h1\" variant=\"h5\">\n                    What services are you offering ?\n                </Typography><br></br>\n                <FormControl variant=\"outlined\" >\n              <InputLabel htmlFor=\"outlined-type-native-simple\">Type</InputLabel>\n              <Select\n               \n                native\n                value={serviceType}\n                onChange={handleServiceTypeChange}\n                label=\"Service Type\"\n                inputProps={{\n                  name: \"type\",\n                  id: \"outlined-type-native-simple\",\n                }}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                <option value={1}>plumber</option>\n                <option value={2}>electrician</option>\n                <option value={3}>painter</option>\n                <option value={4}>contractor</option>\n              </Select><br></br>\n            </FormControl>\n                <form onSubmit={handleService} noValidate autoComplete=\"off\">\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                \n                                value={servicePrice}\n                                \n                                onChange={handleServicePrice}\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"servicePrice\"\n                                label=\"Service Price\"\n                                name=\"servicePrice\"\n                                autoComplete=\"servicePrice\" />\n                        </Grid> \n                        <Grid item>\n            \n          </Grid>\n                        \n\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={clickHandler}\n                    >\n                        Submit\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={5}>\n\n            </Box>\n        </Container>\n        </CardContent>\n  </Card>\n    );\n}\n","import { Link, Switch, useHistory } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport { TradesmenCompanyRegister } from './components/register/TradesmenCompanyRegister';\nimport { TradesmenRegister } from './components/register/TradesmenRegister';\nimport { ClippedDrawer } from './components/side-nav/ClippedDrawer';\nimport { LoginForm } from './components/login/LoginForm';\nimport { User } from './models/User';\nimport { LandingPage } from './components/landing-page/LandingPage';\nimport { CreateReview } from './components/reviews/CreateReview';\nimport { Company } from './models/Company';\nimport { Register } from './customer-comp/CustomerRegister';\nimport { ServiceRegister } from './components/servicesregister/ServiceRegister';\n\n\n\nfunction App() {\n  const [user, changeUser] = useState<User>();\n  const [company, changeCompany] = useState<Company>();\n  \n\n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      \n      <Router>\n      <Route path= \"/CreateReview\"> \n      <CreateReview updateCurrentUser={changeUser} currentUser={user} updateCurrentCompany = {changeCompany} currentCompany = {company}/> \n      </Route>\n\n      <Route path= \"/TradesmenCompanyRegister\"> \n      <TradesmenCompanyRegister updateCurrentUser={changeUser} currentUser={user} updateCurrentCompany = {changeCompany} currentCompany = {company}  /> \n      </Route>\n      <Route path=\"/dashboard\">\n        <ClippedDrawer updateCurrentUser={changeUser} currentUser={user} updateCurrentCompany = {changeCompany} currentCompany = {company}/>\n      </Route>\n      <Route exact path=\"/login\">\n        <LoginForm updateCurrentUser={changeUser} currentUser={user}/>\n      </Route>\n      <Route path= \"/tradesmenregister\" exact component = {TradesmenRegister}>\n        <TradesmenRegister updateCurrentUser={changeUser} currentUser={user}/>\n      </Route>\n      <Route path= \"/serviceregister\" exact component = {ServiceRegister} >\n        <ServiceRegister updateCurrentUser={changeUser} currentUser={user} updateCurrentCompany = {changeCompany} currentCompany = {company} />\n      </Route>\n       \n      <Route path= \"/customerregister\" exact component = {Register}>\n        <Register updateCurrentUser={changeUser} currentUser={user}/>\n      </Route>\n      <Route exact path=\"/\">\n        <LandingPage />\n      </Route>\n      </Router>\n              \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n// function formatName(user: { firstName: any; lastName: any; }) {\n//   return user.firstName + ' ' + user.lastName;\n// }\n\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}